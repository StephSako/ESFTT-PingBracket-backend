{"version":3,"sources":["./src/app/AuthModule/auth-routing.module.ts","./src/app/AuthModule/auth.modules.ts","./src/app/AuthModule/form-account/form-account.component.ts","./src/app/AuthModule/form-account/form-account.component.html","./src/app/AuthModule/login/login.component.ts","./src/app/AuthModule/login/login.component.html"],"names":[],"mappings":"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","file":"AuthModule-auth-modules.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UnauthGuardService } from '../unauth-guard.service';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent, canActivate: [UnauthGuardService] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { FormAccountComponent } from './form-account/form-account.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormAccountComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    AuthRoutingModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class AuthModules {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenPayloadLogin } from '../../Interface/Account';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AccountService } from '../../Service/account.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NotifyService } from '../../Service/notify.service';\r\n\r\n@Component({\r\n  selector: 'app-form-account',\r\n  templateUrl: './form-account.component.html',\r\n  styleUrls: ['./form-account.component.scss']\r\n})\r\nexport class FormAccountComponent implements OnInit {\r\n\r\n  public credentials: TokenPayloadLogin = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n  spinnerShown: boolean;\r\n  passwordVisibility = false;\r\n  inputPasswordType = 'password';\r\n  reactiveForm: FormGroup;\r\n\r\n  constructor(private authService: AccountService, private router: Router, private snackBar: MatSnackBar,\r\n              private notifyService: NotifyService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.spinnerShown = false;\r\n    this.reactiveForm = new FormGroup({\r\n      username: new FormControl(this.credentials.username, [Validators.required]),\r\n      password: new FormControl(this.credentials.password, [Validators.required])\r\n    });\r\n  }\r\n\r\n  login(): void {\r\n    if (this.invalidForm()) this.notifyService.notifyUser('Renseignez le pseudo et le mot de passe', this.snackBar, 'error','OK');\r\n    else {\r\n      this.spinnerShown = true;\r\n      this.credentials = {\r\n        username: this.reactiveForm.get('username').value,\r\n        password: this.reactiveForm.get('password').value\r\n      };\r\n      this.authService.login(this.credentials).subscribe(() => {\r\n          this.spinnerShown = false;\r\n          this.router.navigateByUrl('/gestion');\r\n        },\r\n        err => {\r\n          this.spinnerShown = false;\r\n          this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  togglePasswordVisibility(): void {\r\n    this.passwordVisibility = !this.passwordVisibility;\r\n    this.inputPasswordType = this.passwordVisibility ? 'text' : 'password';\r\n  }\r\n\r\n  public invalidForm(): boolean {\r\n    return !this.reactiveForm.get('username').value || !this.reactiveForm.get('password').value;\r\n  }\r\n}\r\n","<form [formGroup]=\"reactiveForm\" (ngSubmit)=\"login()\">\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n    <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\r\n      <mat-form-field appearance=\"outline\" class=\"center\">\r\n        <mat-label>Pseudo</mat-label>\r\n        <input formControlName=\"username\" name=\"username\" type=\"text\" matInput required>\r\n        <mat-error *ngIf=\"!reactiveForm.get('username').value\">\r\n          Pseudo <strong>obligatoire</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\r\n      <mat-form-field appearance=\"outline\" class=\"center\">\r\n        <mat-icon (click)=\"togglePasswordVisibility()\" matSuffix>{{ passwordVisibility ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-label>Mot de passe</mat-label>\r\n        <input formControlName=\"password\" name=\"password\" [type]=\"inputPasswordType\" matInput required>\r\n        <mat-error *ngIf=\"!reactiveForm.get('password').value\">\r\n          Mot de passe <strong>obligatoire</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n\r\n  <button class=\"center\" type=\"submit\" mat-raised-button color=\"primary\">\r\n    <mat-icon *ngIf=\"spinnerShown\">\r\n      <mat-spinner color=\"accent\" [diameter]=\"20\"></mat-spinner>\r\n    </mat-icon>\r\n    C'est parti !\r\n  </button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n  constructor(private titleService: Title) {\n    this.titleService.setTitle('Tournoi ESFTT - Espace privé');\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"container\">\n  <mat-card class=\"center\">\n    <h1 class=\"lobster center\">Se connecter à l'espace privé</h1>\n    <app-form-account></app-form-account>\n  </mat-card>\n</div>\n"],"sourceRoot":"webpack:///"}