{"version":3,"sources":["./src/app/AuthModule/form-account/form-account.component.html","./src/app/AuthModule/form-account/form-account.component.ts","./src/app/AuthModule/login/login.component.ts","./src/app/AuthModule/login/login.component.html","./src/app/AuthModule/auth-routing.module.ts","./src/app/AuthModule/auth.modules.ts"],"names":["authService","router","snackBar","notifyService","credentials","username","password","passwordVisibility","inputPasswordType","this","spinnerShown","reactiveForm","required","invalidForm","notifyUser","get","value","login","subscribe","navigateByUrl","err","error","togglePasswordVisibility","LoginComponent","titleService","setTitle","routes","path","component","canActivate","AuthRoutingModule","forChild","AuthModules"],"mappings":"oXAMQ,oBACE,mBAAO,iBAAQ,sBAAW,OAC5B,Q,sBASA,oBACE,yBAAa,iBAAQ,sBAAW,OAClC,Q,sBAMJ,mBACE,wBACF,Q,MAD8B,6BCb3B,MAAM,EAUX,YACUA,EACAC,EACAC,EACAC,GAHA,KAAAH,cACA,KAAAC,SACA,KAAAC,WACA,KAAAC,gBAbH,KAAAC,YAAiC,CACtCC,SAAU,GACVC,SAAU,IAGZ,KAAAC,oBAAqB,EACrB,KAAAC,kBAAoB,WAUpB,WACEC,KAAKC,cAAe,EACpBD,KAAKE,aAAe,IAAI,IAAU,CAChCN,SAAU,IAAI,IAAYI,KAAKL,YAAYC,SAAU,CACnD,IAAWO,WAEbN,SAAU,IAAI,IAAYG,KAAKL,YAAYE,SAAU,CACnD,IAAWM,aAKjB,QACMH,KAAKI,cACPJ,KAAKN,cAAcW,WACjB,0CACAL,KAAKP,SACL,QACA,OAGFO,KAAKC,cAAe,EACpBD,KAAKL,YAAc,CACjBC,SAAUI,KAAKE,aAAaI,IAAI,YAAYC,MAC5CV,SAAUG,KAAKE,aAAaI,IAAI,YAAYC,OAE9CP,KAAKT,YAAYiB,MAAMR,KAAKL,aAAac,UACvC,KACET,KAAKC,cAAe,EACpBD,KAAKR,OAAOkB,cAAc,aAE3BC,IACCX,KAAKC,cAAe,EACpBD,KAAKN,cAAcW,WACjBM,EAAIC,MACJZ,KAAKP,SACL,QACA,SAOV,2BACEO,KAAKF,oBAAsBE,KAAKF,mBAChCE,KAAKD,kBAAoBC,KAAKF,mBAAqB,OAAS,WAGvD,cACL,OACGE,KAAKE,aAAaI,IAAI,YAAYC,QAClCP,KAAKE,aAAaI,IAAI,YAAYC,O,sCArE5B,GAAoB,0C,uBAApB,EAAoB,uiBDbjC,iBAAiC,kCAAY,EAAAC,UAC3C,gBACE,gBACE,2BACE,oBAAW,iBAAM,OACjB,kBACA,4BAGF,OACF,OAEA,gBACE,2BACE,sBAAU,+BAAS,EAAAK,6BAAsC,SAAyD,OAClH,qBAAW,wBAAY,OACvB,mBACA,6BAGF,OACF,OACF,OAEA,oBACE,4BAGA,2BACF,OACF,Q,MA9BM,iCAMa,2DAQ8C,iEAEP,yCACvC,2DAQL,sC,yLEjBP,MAAMC,EACX,YAAoBC,GAAA,KAAAA,eAClBf,KAAKe,aAAaC,SAAS,mCAG7B,a,sCALWF,GAAc,Y,uBAAdA,EAAc,mICR3B,gBACE,qBACE,eAA2B,8CAA6B,OACxD,2BACF,OACF,S,iCCAA,MAAMG,EAAiB,CACrB,CAAEC,KAAM,GAAIC,UAAWL,EAAgBM,YAAa,CAAC,OAOhD,MAAMC,G,uBAAAA,I,oDAAAA,IAAiB,SAHnB,CAAC,IAAaC,SAASL,IACtB,OCmBL,MAAMM,G,uBAAAA,I,oDAAAA,IAAW,SAdb,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACAF,EACA","file":"AuthModule-auth-modules.js","sourcesContent":["<form [formGroup]=\"reactiveForm\" (ngSubmit)=\"login()\">\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n    <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\r\n      <mat-form-field appearance=\"outline\" class=\"center\">\r\n        <mat-label>Pseudo</mat-label>\r\n        <input formControlName=\"username\" name=\"username\" type=\"text\" matInput required>\r\n        <mat-error *ngIf=\"!reactiveForm.get('username').value\">\r\n          Pseudo <strong>obligatoire</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\r\n      <mat-form-field appearance=\"outline\" class=\"center\">\r\n        <mat-icon (click)=\"togglePasswordVisibility()\" matSuffix>{{ passwordVisibility ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-label>Mot de passe</mat-label>\r\n        <input formControlName=\"password\" name=\"password\" [type]=\"inputPasswordType\" matInput required>\r\n        <mat-error *ngIf=\"!reactiveForm.get('password').value\">\r\n          Mot de passe <strong>obligatoire</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n\r\n  <button class=\"center\" type=\"submit\" mat-raised-button color=\"primary\">\r\n    <mat-icon *ngIf=\"spinnerShown\">\r\n      <mat-spinner color=\"accent\" [diameter]=\"20\"></mat-spinner>\r\n    </mat-icon>\r\n    C'est parti !\r\n  </button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenPayloadLogin } from '../../Interface/Account';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AccountService } from '../../Service/account.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NotifyService } from '../../Service/notify.service';\r\n\r\n@Component({\r\n  selector: 'app-form-account',\r\n  templateUrl: './form-account.component.html',\r\n  styleUrls: ['./form-account.component.scss'],\r\n})\r\nexport class FormAccountComponent implements OnInit {\r\n  public credentials: TokenPayloadLogin = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n  spinnerShown: boolean;\r\n  passwordVisibility = false;\r\n  inputPasswordType = 'password';\r\n  reactiveForm: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AccountService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar,\r\n    private notifyService: NotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.spinnerShown = false;\r\n    this.reactiveForm = new FormGroup({\r\n      username: new FormControl(this.credentials.username, [\r\n        Validators.required,\r\n      ]),\r\n      password: new FormControl(this.credentials.password, [\r\n        Validators.required,\r\n      ]),\r\n    });\r\n  }\r\n\r\n  login(): void {\r\n    if (this.invalidForm()) {\r\n      this.notifyService.notifyUser(\r\n        'Renseignez le pseudo et le mot de passe',\r\n        this.snackBar,\r\n        'error',\r\n        'OK'\r\n      );\r\n    } else {\r\n      this.spinnerShown = true;\r\n      this.credentials = {\r\n        username: this.reactiveForm.get('username').value,\r\n        password: this.reactiveForm.get('password').value,\r\n      };\r\n      this.authService.login(this.credentials).subscribe(\r\n        () => {\r\n          this.spinnerShown = false;\r\n          this.router.navigateByUrl('/gestion');\r\n        },\r\n        (err) => {\r\n          this.spinnerShown = false;\r\n          this.notifyService.notifyUser(\r\n            err.error,\r\n            this.snackBar,\r\n            'error',\r\n            'OK'\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  togglePasswordVisibility(): void {\r\n    this.passwordVisibility = !this.passwordVisibility;\r\n    this.inputPasswordType = this.passwordVisibility ? 'text' : 'password';\r\n  }\r\n\r\n  public invalidForm(): boolean {\r\n    return (\r\n      !this.reactiveForm.get('username').value ||\r\n      !this.reactiveForm.get('password').value\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private titleService: Title) {\n    this.titleService.setTitle('Tournoi ESFTT - Espace privé');\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"container\">\n  <mat-card class=\"center\">\n    <h1 class=\"lobster center\">Se connecter à l'espace privé</h1>\n    <app-form-account></app-form-account>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UnauthGuardService } from '../unauth-guard.service';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent, canActivate: [UnauthGuardService] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormAccountComponent } from './form-account/form-account.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [FormAccountComponent, LoginComponent],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class AuthModules {}\r\n"],"sourceRoot":"webpack:///"}