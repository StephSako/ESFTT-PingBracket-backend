{"version":3,"sources":["./src/app/Service/bracket.service.ts","./src/app/TournamentModule/tournament-routing.module.ts","./src/app/SharedModule/form-joueur/form-joueur.component.ts","./src/app/SharedModule/form-joueur/form-joueur.component.html","./src/app/FormulaireModule/formulaire.modules.ts","./src/app/auth-guard.service.ts","./src/app/Service/handicap.service.ts","./src/app/Service/account.service.ts","./src/environments/environment.ts","./src/app/Service/buffet.service.ts","./src/app/wildcard.modules.ts","./src/app/TournamentModule/binome/binome.component.ts","./src/app/TournamentModule/binome/binome.component.html","./src/app/Service/joueur.service.ts","./src/app/Service/tableau.service.ts","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/TournamentModule/match/match.component.ts","./src/app/TournamentModule/match/match.component.html","./src/app/TournamentModule/poule/poule.component.ts","./src/app/TournamentModule/poule/poule.component.html","./src/app/SharedModule/shared.modules.ts","./src/app/Service/binome.service.ts","./src/app/Service/logs.service.ts","./src/app/TournamentModule/bracket/bracket.component.ts","./src/app/TournamentModule/bracket/bracket.component.html","./src/app/TournamentModule/poule/handicap/handicap.component.ts","./src/app/TournamentModule/poule/handicap/handicap.component.html","./src/app/Service/poules.service.ts","./src/app/Service/parametres.service.ts","./src/app/FormulaireModule/formulaire-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Service/notify.service.ts","./src/app/FormulaireModule/formulaire/formulaire.component.ts","./src/app/FormulaireModule/formulaire/formulaire.component.html","./src/app/FormulaireModule/no-sanitize.pipe.ts","./src/app/Service/auth-interceptor.interceptor.ts","./src/app/TournamentModule/list-players/list-players.component.ts","./src/app/TournamentModule/list-players/list-players.component.html","./src/app/app.module.ts","./src/app/TournamentModule/tournament.modules.ts","./src/app/TournamentModule/tableau/tableau.component.ts","./src/app/TournamentModule/tableau/tableau.component.html","./src/app/core.modules.ts","./src/app/unauth-guard.service.ts","./src/app/FormulaireModule/confirm-formulaire/confirm-formulaire.component.ts","./src/app/FormulaireModule/confirm-formulaire/confirm-formulaire.component.html","./src/app/SharedModule/dialog/dialog.component.ts","./src/app/SharedModule/dialog/dialog.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BracketService {\n\n  private baseURL = environment.endpointNodeApi + 'bracket/';\n\n  constructor(private http: HttpClient) { }\n\n  public getBracket(tableau: string, phase: string): Observable<any> {\n    return this.http.get(`${this.baseURL}${tableau}/${phase}`);\n  }\n\n  public edit(tableau: string, actualRound: number, actualIdMatch: number, winnerId: string, looserId: string, phase: string):\n    Observable<any> {\n    return this.http.put(`${this.baseURL}edit/${tableau}/${phase}/${actualRound}/${actualIdMatch}`, {winnerId, looserId});\n  }\n\n  public generateBracket(bracket: string, format: string, phase: string, poules: boolean, maxNumberPlayers: number): Observable<any> {\n    return this.http.put(`${this.baseURL}generate/${bracket}/${phase}`, { format, poules, maxNumberPlayers });\n  }\n\n  public deleteBracket(idTableau: string): Observable<any> {\n    return this.http.delete(`${this.baseURL}delete/${idTableau}`);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TableauComponent } from './tableau/tableau.component';\r\nimport { AuthGuardService } from '../auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'tableau/:tableau', component: TableauComponent, canActivate: [AuthGuardService] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class TournamentRoutingModule { }\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { JoueurInterface } from '../../Interface/Joueur';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { TableauInterface } from '../../Interface/Tableau';\nimport { TableauService } from '../../Service/tableau.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NotifyService } from '../../Service/notify.service';\n\n@Component({\n  selector: 'app-form-joueur',\n  templateUrl: './form-joueur.component.html',\n  styleUrls: ['./form-joueur.component.scss']\n})\nexport class FormJoueurComponent implements OnInit, OnDestroy {\n\n  @Input() joueur: JoueurInterface = {\n    nom: null,\n    classement: null,\n    buffet: null,\n    age: null,\n    _id: null,\n    tableaux: null,\n    pointage: null\n  };\n  tableaux: TableauInterface[];\n  private tableauxSubscription: Subscription;\n  private tableauxEventEmitter: Subscription;\n\n  constructor(private route: ActivatedRoute, private tableauService: TableauService, private notifyService: NotifyService,\n              public dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.getAllTableaux();\n      this.tableauxSubscription = this.tableauService.tableauxSource.subscribe((tableaux: TableauInterface[]) => this.tableaux = tableaux);\n      this.tableauxEventEmitter = this.tableauService.tableauxChange.subscribe(() => this.getAllTableaux());\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.tableauxSubscription.unsubscribe();\n    this.tableauxEventEmitter.unsubscribe();\n  }\n\n  getAllTableaux(): void {\n    this.tableauService.getAllTableaux().subscribe(tableaux => this.tableaux = tableaux.filter(t => t.is_launched === 0), err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  typingAge(): void {\n    this.joueur.tableaux = this.joueur.tableaux.filter(tableau =>\n      !(this.joueur.age <= tableau.age_minimum && tableau.age_minimum !== null));\n  }\n\n  compareTableauWithOther(tableau1: TableauInterface, tableau2: TableauInterface): boolean {\n    return tableau1 && tableau2 ? tableau1.nom === tableau2.nom : tableau1 === tableau2;\n  }\n\n  clickable(tableau: TableauInterface): boolean {\n    return tableau.age_minimum !== null && (this.joueur.age === null || this.joueur.age >= tableau.age_minimum);\n  }\n}\n","<div fxLayout=\"row\">\n  <div fxFlex=\"25%\" class=\"center\">\n    <mat-form-field appearance=\"outline\" class=\"center\">\n      <mat-icon matSuffix>title</mat-icon>\n      <mat-label>Nom du joueur</mat-label>\n      <input name=\"nom\" type=\"text\" [(ngModel)]=\"joueur.nom\" matInput>\n    </mat-form-field>\n  </div>\n\n  <div fxFlex=\"20%\">\n    <mat-form-field appearance=\"outline\" class=\"center\">\n      <mat-icon matSuffix>bar_chart</mat-icon>\n      <mat-label>Classement</mat-label>\n      <input name=\"classement\" type=\"number\" [(ngModel)]=\"joueur.classement\" min=\"0\" max=\"2000\" matInput>\n    </mat-form-field>\n  </div>\n\n  <div fxFlex=\"20%\">\n    <mat-form-field appearance=\"outline\" class=\"center\">\n      <mat-icon matSuffix>today</mat-icon>\n      <mat-label>Âge</mat-label>\n      <input (input)=\"typingAge()\" name=\"age\" [(ngModel)]=\"joueur.age\" type=\"number\" min=\"0\" max=\"99\" matInput>\n    </mat-form-field>\n  </div>\n\n  <div fxFlex=\"20%\">\n    <mat-form-field appearance=\"outline\" class=\"center\">\n      <mat-icon matSuffix>dns</mat-icon>\n      <mat-label>Tableaux</mat-label>\n      <mat-select [compareWith]=\"compareTableauWithOther\" [(ngModel)]=\"joueur.tableaux\" multiple>\n        <mat-option [disabled]=\"clickable(tableau)\" *ngFor=\"let tableau of tableaux\" [value]=\"tableau\"><span>{{tableau.nom | titlecase}} <span *ngIf=\"tableau.age_minimum !== null\">-{{ tableau.age_minimum}} ans</span></span></mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div fxFlex=\"15%\">\n    <mat-slide-toggle color=\"primary\" [(ngModel)]=\"joueur.buffet\">Buffet</mat-slide-toggle>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormulaireRoutingModule } from './formulaire-routing.module';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FormulaireComponent } from './formulaire/formulaire.component';\r\nimport { ConfirmFormulaireComponent } from './confirm-formulaire/confirm-formulaire.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NoSanitizePipe } from './no-sanitize.pipe';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormulaireComponent,\r\n    ConfirmFormulaireComponent,\r\n    NoSanitizePipe\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormulaireRoutingModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    FlexLayoutModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatSlideToggleModule\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class FormulaireModules {}\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from './Service/account.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.accountService.isLoggedIn()) { return true; }\n    else {\n      this.accountService.logout();\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HandicapService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Calculer les points d'handicap entre deux classements\r\n   * @param joueur1\r\n   * @param joueur2\r\n   */\r\n  calculHandicap(joueur1: number, joueur2: number): any[] {\r\n    let isLoisir1 = (joueur1 === 0 && joueur2 !== 0);\r\n    let isLoisir2 = (joueur2 === 0 && joueur1 !== 0);\r\n\r\n    if (isLoisir1) joueur1 = 500;\r\n    else if (isLoisir2) joueur2 = 500;\r\n\r\n    let inverser = false;\r\n    let handicap: any[] = [0, 0];\r\n\r\n    if (joueur1 !== joueur2 || Math.abs(joueur1 - joueur2) < 50) {\r\n      if (joueur1 < joueur2) inverser = true;\r\n\r\n      let ecart = Math.abs(joueur1 - joueur2);\r\n      if (ecart >= 50 && ecart <= 99) handicap = [-1, 0];\r\n      else if (ecart >= 100 && ecart <= 199) handicap = [-1, 1];\r\n      else if (ecart >= 200 && ecart <= 299) handicap = [-2, 1];\r\n      else if (ecart >= 300 && ecart <= 399) handicap = [-2, 2];\r\n      else if (ecart >= 400 && ecart <= 499) handicap = [-3, 2];\r\n      else if (ecart >= 500 && ecart <= 599) handicap = [-3, 3];\r\n      else if (ecart >= 600 && ecart <= 699) handicap = [-4, 3];\r\n      else if (ecart >= 700 && ecart <= 799) handicap = [-4, 4];\r\n      else if (ecart >= 800) handicap = [-5, 4];\r\n    }\r\n\r\n    if ((isLoisir1 && !inverser) || (isLoisir2 && inverser)) handicap[0]++;\r\n    else if ((isLoisir2 && !inverser) || (isLoisir1 && inverser))  handicap[1]++;\r\n\r\n    if (inverser) handicap.reverse();\r\n    return handicap.map(handicapItem => {\r\n      handicapItem = (handicapItem > 0) ? '+' + handicapItem : String(handicapItem)\r\n      return handicapItem;\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { TokenPayloadLogin, TokenResponse, UserInterface } from '../Interface/Account';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AccountService {\r\n\r\n  private baseURL = environment.endpointNodeApi + 'account/';\r\n  private token: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  private saveToken(token: string): void {\r\n    this.token = token;\r\n    localStorage.setItem('userToken', token);\r\n    this.launchAutoLogout();\r\n  }\r\n\r\n  public login(user: TokenPayloadLogin): Observable<any> {\r\n    return this.http.post(this.baseURL + 'login', user).pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) this.saveToken(data.token)\r\n        return data;\r\n      }),\r\n      catchError(err => throwError(err))\r\n    );\r\n  }\r\n\r\n  public editUsername(username: string): Observable<any> {\r\n    const _id = this.getUserDetails()._id;\r\n    const URL = this.http.put(`${this.baseURL}edit/username`, {username, _id});\r\n\r\n    return URL.pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) this.saveToken(data.token);\r\n        return data;\r\n      }),\r\n      catchError(err => throwError(err))\r\n    );\r\n  }\r\n\r\n  public editPassword(actualPassword: string, newPassword: string): Observable<any> {\r\n    const _id = this.getUserDetails()._id;\r\n    const URL = this.http.put(`${this.baseURL}edit/password`, {actualPassword, newPassword, _id});\r\n\r\n    return URL.pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) this.saveToken(data.token);\r\n        return data;\r\n      }),\r\n      catchError(err => throwError(err))\r\n    );\r\n  }\r\n\r\n  public getToken(): string {\r\n    if (!this.token) this.token = localStorage.getItem('userToken');\r\n    return this.token;\r\n  }\r\n\r\n  public getUserDetails(): UserInterface {\r\n    const token = this.getToken();\r\n    let payload;\r\n    if (token) {\r\n      payload = token.split('.')[1];\r\n      payload = atob(payload);\r\n      return JSON.parse(payload);\r\n    } else return null;\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails();\r\n    return user ? user.exp * 1000 > Date.now() : false;\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = '';\r\n    localStorage.removeItem('userToken');\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n\r\n  public launchAutoLogout(): void {\r\n    setTimeout(() => {\r\n      this.logout();\r\n    }, ((this.getUserDetails().exp * 1000) - Date.now()))\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  anonymousHeader: 'ANONYMOUSLY_LOGGED',\n  endpointNodeApi: 'http://localhost:3000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BuffetInterface } from '../Interface/Buffet';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuffetService {\n\n  private baseURL = environment.endpointNodeApi + 'buffet/';\n\n  constructor(private http: HttpClient) { }\n\n  public getBuffet(): Observable<any> {\n    return this.http.get(this.baseURL);\n  }\n\n  public platsAlreadyCooked(): Observable<any> {\n    return this.http.get(`${this.baseURL}platsAlreadyCooked`);\n  }\n\n  public register(buffet: BuffetInterface): Observable<any> {\n    return this.http.post(`${this.baseURL}register`, buffet);\n  }\n\n  public edit(buffet: BuffetInterface): Observable<any> {\n    return this.http.post(`${this.baseURL}edit`, buffet);\n  }\n}\n","import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ErrorPageComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {path: '**', component: ErrorPageComponent},\r\n      {path: 'error-page', component: ErrorPageComponent}\r\n    ]),\r\n    MatIconModule\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class WildcardModules { }\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport { JoueurInterface } from '../../Interface/Joueur';\nimport { TableauInterface } from '../../Interface/Tableau';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TableauService } from '../../Service/tableau.service';\nimport { NotifyService } from '../../Service/notify.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { BinomeInterface } from '../../Interface/Binome';\nimport { BinomeService } from '../../Service/binome.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-binome',\n  templateUrl: './binome.component.html',\n  styleUrls: ['./binome.component.scss']\n})\nexport class BinomeComponent implements OnInit, OnDestroy {\n\n  @Input() binomes: BinomeInterface[] = [];\n  @Input() subscribedUnassignedPlayers: JoueurInterface[] = [];\n  tableau: TableauInterface = {\n    format: null,\n    _id: null,\n    poules: null,\n    nom: null,\n    is_launched: null,\n    consolante: null,\n    maxNumberPlayers: null,\n    age_minimum: null,\n    nbPoules: null,\n    handicap: null\n  };\n  private tableauxEditionSubscription: Subscription;\n  @Output() generatePoules: EventEmitter<any> = new EventEmitter();\n  @Output() getAllBinomes: EventEmitter<any> = new EventEmitter();\n  @Output() getSubscribedUnassignedPlayers: EventEmitter<any> = new EventEmitter();\n\n  onScrollEvent($event): void{\n    const element = document.getElementById('listPlayers');\n    if (element) {\n      if ($event.path[1].scrollY >= 173) {\n        element.classList.remove('absolutePos');\n        element.classList.add('stickyPos');\n      }\n      else {\n        element.classList.add('absolutePos');\n        element.classList.remove('stickyPos');\n      }\n    }\n  }\n\n  constructor(private binomeService: BinomeService, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar,\n    private notifyService: NotifyService, private gestionService: TableauService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.getTableau();\n\n      this.tableauxEditionSubscription = this.gestionService.tableauxEditSource.subscribe((tableau: TableauInterface) => {\n        this.tableau = tableau;\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.tableauxEditionSubscription.unsubscribe();\n  }\n\n  getTableau(): void {\n    this.gestionService.getTableau(this.router.url.split('/').pop()).subscribe(tableau => {\n      this.tableau = tableau;\n      this.getAllBinomes.emit();\n      if (this.tableau.format === 'double') this.getSubscribedUnassignedPlayers.emit();\n    });\n  }\n\n  editBinome(event: CdkDragDrop<[id: JoueurInterface], any>, id_binome: string): void {\n    if (event.previousContainer === event.container) { // Le joueur n'a pas changé de binôme\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      if (event.container.data.length < this.tableau.maxNumberPlayers || id_binome === null /* Si un joueur est sorti d'un binôme */) {\n        transferArrayItem(event.previousContainer.data,\n          event.container.data,\n          event.previousIndex,\n          event.currentIndex);\n        this.binomeService.editBinome(event.item.data[1], id_binome, event.container.data, event.item.data[0])\n          .subscribe(() => {\n            if (this.tableau.poules && this.tableau.is_launched === 0) this.generatePoules.emit();\n          }, err => {\n            this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n          });\n      } else {\n        this.notifyService.notifyUser('Le binôme est complet', this.snackBar, 'error','OK');\n      }\n    }\n  }\n\n  unsubscribeDblClick(idBinome, idPlayer): void {\n    this.binomeService.removePlayer(idBinome, idPlayer).subscribe(() => {\n      this.getAllBinomes.emit();\n      if (this.tableau.poules && this.tableau.is_launched === 0) this.generatePoules.emit();\n      this.getSubscribedUnassignedPlayers.emit();\n    }, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  nbPlayers(): number {\n    return (this.binomes.length > 0 ? this.binomes.map(binome => binome.joueurs.length).reduce((a, b) => a + b) : 0);\n  }\n}\n","<div class=\"container\">\n\n  <mat-card *ngIf=\"!binomes.length && !subscribedUnassignedPlayers.length\">\n    <h2 class=\"center lobster\">Il n'y a pas de joueurs inscrits pour le moment</h2>\n  </mat-card>\n\n  <div (window:scroll)=\"onScrollEvent($event)\" fxLayout=\"column\" cdkDropListGroup *ngIf=\"binomes.length || subscribedUnassignedPlayers.length\">\n    <div fxLayout=\"row nowrap\" fxFlexFill fxLayoutAlign=\"space-between stretch\">\n\n      <div fxFlex=\"33%\" fxLayoutAlign=\"center stretch\">\n        <div class=\"listBinomes\">\n          <div *ngFor=\"let binome of binomes; let indexList = index; let isEven = even;\">\n            <mat-card [class]=\"'mat-elevation-z8 ' + (binome.locked ? 'locked' : '')\" *ngIf=\"isEven\">\n              <h3 class=\"lobster center\">Binôme n°{{indexList+1}}</h3>\n\n              <div cdkDropList [cdkDropListData]=\"binomes[indexList].joueurs\" cdkDropListSortingDisabled class=\"list\" (cdkDropListDropped)=\"editBinome($event, binome._id)\">\n                <div [cdkDragData]=\"[joueur._id, binome._id]\" [cdkDragDisabled]=\"binome.locked || tableau.is_launched !== 0\" class=\"box center\" *ngFor=\"let joueur of binomes[indexList].joueurs\" cdkDrag (dblclick)=\"unsubscribeDblClick(binome._id, joueur._id)\">\n                  <div class=\"custom-placeholder\" *cdkDragPlaceholder></div>\n                  {{joueur.nom}} - {{joueur.classement}} points\n                </div>\n              </div>\n\n              <p *ngIf=\"binome.joueurs.length === 1\" class=\"center error_message\">Binôme inqualifiable car incomplet</p>\n            </mat-card>\n          </div>\n        </div>\n      </div>\n\n      <div fxFlex=\"33%\" fxLayoutAlign=\"center stretch\" id=\"listPlayers\" class=\"absolutePos\">\n        <div class=\"listPlayers\">\n          <mat-card>\n            <h1 class=\"lobster center labelJoueursInscrits\">Joueurs inscrits</h1>\n            <h2 class=\"lobster center\">({{ nbPlayers() }} assigné<span *ngIf=\"nbPlayers() > 1\">s</span>) - ({{ subscribedUnassignedPlayers.length }} disponible<span *ngIf=\"subscribedUnassignedPlayers.length > 1\">s</span>)</h2>\n\n            <div cdkDropList cdkDropListSortingDisabled [cdkDropListData]=\"subscribedUnassignedPlayers\" class=\"list\" (cdkDropListDropped)=\"editBinome($event, null)\">\n              <div class=\"box center\" [cdkDragDisabled]=\"tableau.is_launched !== 0\" [cdkDragData]=\"[joueur._id, null]\" *ngFor=\"let joueur of subscribedUnassignedPlayers\" cdkDrag>\n                <div class=\"custom-placeholder\" *cdkDragPlaceholder></div>\n                {{joueur.nom}} - {{joueur.classement}} points\n              </div>\n            </div>\n          </mat-card>\n        </div>\n      </div>\n\n      <div fxFlex=\"33%\" fxLayoutAlign=\"center stretch\">\n        <div class=\"listBinomes\">\n          <div *ngFor=\"let binome of binomes; let indexList = index; let isOdd = odd;\">\n            <mat-card [class]=\"'mat-elevation-z8 ' + (binome.locked ? 'locked' : '')\" *ngIf=\"isOdd\">\n              <h3 class=\"lobster center\">Binôme n°{{indexList+1}}</h3>\n\n              <div cdkDropList [cdkDropListData]=\"binomes[indexList].joueurs\" cdkDropListSortingDisabled class=\"list\" (cdkDropListDropped)=\"editBinome($event, binome._id)\">\n                <div [cdkDragData]=\"[joueur._id, binome._id]\" [cdkDragDisabled]=\"binome.locked || tableau.is_launched !== 0\" class=\"box center\" *ngFor=\"let joueur of binomes[indexList].joueurs\" cdkDrag (dblclick)=\"unsubscribeDblClick(binome._id, joueur._id)\">\n                  <div class=\"custom-placeholder\" *cdkDragPlaceholder></div>\n                  {{joueur.nom}} - {{joueur.classement}} points\n                </div>\n              </div>\n\n              <p *ngIf=\"binome.joueurs.length === 1\" class=\"center error_message\">Binôme inqualifiable car unique joueur</p>\n            </mat-card>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JoueurInterface } from '../Interface/Joueur';\nimport {TableauInterface} from '../Interface/Tableau';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JoueurService {\n\n  private baseURL = environment.endpointNodeApi + 'joueur/';\n\n  constructor(private http: HttpClient) { }\n\n  public getPlayer(id_joueur: string): Observable<any> {\n    return this.http.get(`${this.baseURL}${id_joueur}`);\n  }\n\n  public getAllPlayers(): Observable<any> {\n    return this.http.get(this.baseURL);\n  }\n\n  public getTableauPlayers(tableau: string): Observable<any> {\n    return this.http.get(`${this.baseURL}subscribed/${tableau}`);\n  }\n\n  public getUnsubscribedPlayer(tableau: string): Observable<any> {\n    return this.http.get(`${this.baseURL}unsubscribed/${tableau}`);\n  }\n\n  public create(tableaux: TableauInterface[], joueur: JoueurInterface): Observable<any> {\n    return this.http.post(`${this.baseURL}create`, { joueur, tableaux });\n  }\n\n  public edit(joueur: JoueurInterface): Observable<any> {\n    return this.http.put(`${this.baseURL}edit/${joueur._id}`, joueur);\n  }\n\n  public unsubscribe(tableau: TableauInterface, id_joueur: string): Observable<any> {\n    return this.http.put(`${this.baseURL}unsubscribe/${id_joueur}/${tableau._id}`, { format: tableau.format });\n  }\n\n  public delete(id_joueur: string): Observable<any> {\n    return this.http.delete(`${this.baseURL}delete/${id_joueur}`);\n  }\n\n  public getSubscribedUnassignedDouble(tableau: string): Observable<any> {\n    return this.http.get(`${this.baseURL}unassigned/${tableau}`);\n  }\n\n  public moveAllPlayers(previousTableauId: string, newTableauId: string): Observable<any> {\n    return this.http.put(this.baseURL + 'move', {previousTableauId, newTableauId});\n  }\n\n  public pointerPlayer(joueur: JoueurInterface): Observable<any> {\n    return this.http.put(this.baseURL + `pointer/${joueur._id}`, { pointage: !joueur.pointage });\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { TableauInterface } from '../Interface/Tableau';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableauService {\n\n  private baseURL = environment.endpointNodeApi + 'tableau/';\n  tableauxSource = new Subject();\n  tableauxEditSource = new Subject();\n  tableauxChange: EventEmitter<void> = new EventEmitter();\n  nbInscritsChange: EventEmitter<void> = new EventEmitter();\n\n  constructor(private http: HttpClient) {}\n\n  public getAllTableaux(): Observable<any> {\n    return this.http.get(this.baseURL);\n  }\n\n  public tableauEnabledToHostPlayers(tableau: TableauInterface): Observable<any> {\n    return this.http.get(`${this.baseURL}hostable/${tableau._id}/${tableau.age_minimum}/${tableau.format}/${tableau.poules}`);\n  }\n\n  public getTableau(id_tableau: string): Observable<any> {\n    return this.http.get(`${this.baseURL}${id_tableau}`);\n  }\n\n  public getPlayerCountPerTableau(): Observable<any> {\n    return this.http.get(`${this.baseURL}player_count`);\n  }\n\n  public create(tableau: TableauInterface): Observable<any> {\n    return this.http.post(`${this.baseURL}create`, tableau);\n  }\n\n  public edit(tableau: TableauInterface): Observable<any> {\n    return this.http.put(`${this.baseURL}edit/${tableau._id}`, tableau);\n  }\n\n  public changeLaunchState(tableau: TableauInterface): Observable<any> {\n    return this.http.put(`${this.baseURL}change_launch_state/${tableau._id}`,  { is_launched: tableau.is_launched });\n  }\n\n  public unsubscribeInvalidPlayers(tableau: TableauInterface): Observable<any> {\n    return this.http.put(`${this.baseURL}unsubscribe/invalid/${tableau._id}`, tableau);\n  }\n\n  public reset(): Observable<any> {\n    return this.http.delete(`${this.baseURL}reset`);\n  }\n\n  public delete(tableau: TableauInterface): Observable<any> {\n    return this.http.delete(`${this.baseURL}delete/${tableau._id}/${tableau.format}/${tableau.poules}`);\n  }\n\n  public unsubscribeAllPlayers(tableau_id: string): Observable<any> {\n    return this.http.put(`${this.baseURL}unsubscribe_all`, {tableau_id});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <mat-icon class=\"center\">sentiment_dissatisfied</mat-icon>\n  <h1 class=\"lobster center\">Ce que vous recherchez n'existe pas ...</h1>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { BracketService } from '../../Service/bracket.service';\r\nimport { TableauInterface } from '../../Interface/Tableau';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NotifyService } from '../../Service/notify.service';\r\nimport { HandicapService } from 'src/app/Service/handicap.service';\r\n\r\n@Component({\r\n  selector: 'app-match',\r\n  templateUrl: './match.component.html',\r\n  styleUrls: ['./match.component.scss']\r\n})\r\nexport class MatchComponent implements OnInit {\r\n\r\n  @Input() match: any;\r\n  @Input() phase: string;\r\n  @Output() updateBracket: EventEmitter<any> = new EventEmitter();\r\n  @Input() tableau: TableauInterface = {\r\n    format: null,\r\n    _id: null,\r\n    is_launched: null,\r\n    nom: null,\r\n    poules: null,\r\n    consolante: null,\r\n    maxNumberPlayers: null,\r\n    age_minimum: null,\r\n    nbPoules: null,\r\n    handicap: null\r\n  };\r\n  public disabledMatChip: boolean = false;\r\n\r\n  constructor(private tournoiService: BracketService, private snackBar: MatSnackBar, private notifyService: NotifyService, private readonly handicapService: HandicapService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  setWinner(match: any, winnerId: string): void {\r\n    if (match.joueurs.length > 1 && this.tableau.is_launched !== 2 && !match.joueurs[0].winner && ((match.joueurs[1] && !match.joueurs[1].winner) || !match.joueurs[1])) {\r\n      this.disabledMatChip = true;\r\n      const looserId = (match.joueurs.length === 2 && (match.joueurs[0]._id && match.joueurs[1]._id) ?\r\n        match.joueurs.filter(joueur => joueur._id._id !== winnerId)[0]._id._id : null);\r\n        this.tournoiService.edit(this.tableau._id, match.round, match.id, winnerId, looserId, this.phase)\r\n        .subscribe(() => {\r\n          this.updateBracket.emit();\r\n          this.disabledMatChip = false;\r\n        }, err => {\r\n          this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n          this.disabledMatChip = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  isClickable(match: any): string {\r\n    return (match.joueurs.length > 1 && !match.joueurs[0].winner && ((match.joueurs[1] && !match.joueurs[1].winner) || !match.joueurs[1]) ? 'clickable' : '');\r\n  }\r\n\r\n  getColor(match: any, joueur: any): string {\r\n    if ((match.joueurs.length < 2 && !match.joueurs[0].winner) || (!match.joueurs[0].winner && !match.joueurs[1].winner)) { return 'undefined'; }\r\n    else { return (joueur.winner ? 'winner' : 'looser'); }\r\n  }\r\n\r\n  getName(entity: any): string {\r\n    if (this.tableau.format === 'simple') {\r\n      return this.formatGetName(entity.nom + ' - ' + entity.classement + ' points');\r\n    }\r\n    else if (this.tableau.format === 'double') {\r\n      return this.formatGetName(entity.joueurs ? entity.joueurs.map(joueur => joueur.nom).join(' - ') : '');\r\n    }\r\n  }\r\n\r\n  formatGetName(name_s: string): string {\r\n    return (name_s.length > 30 && this.tableau.format === 'double') ? name_s.substring(0, 27) + '...' : name_s;\r\n  }\r\n\r\n  getHandicap(joueur1: number, joueur2: number) {\r\n    return this.handicapService.calculHandicap(joueur1, joueur2);\r\n  }\r\n\r\n  matchHasTwoPlayers(joueurs): boolean {\r\n    return joueurs.length === 2 && joueurs.every((j: any) => j.hasOwnProperty('_id'));\r\n  }\r\n}\r\n","<div class=\"ngtt__match-wrapper\">\n  <ng-container *ngFor=\"let joueur of match.joueurs; let index = index;\">\n    <div fxLayout=\"row\">\n      <div id=\"finale\" *ngIf=\"match.joueurs.length === 2 && !(!match.joueurs[0].winner && !match.joueurs[1].winner) && match.round === 1\">\n        <mat-icon id=\"yellow\" *ngIf=\"match.id === 1 && joueur.winner\" matSuffix>emoji_events</mat-icon>\n        <mat-icon id=\"white\" *ngIf=\"match.id === 1 && !joueur.winner\" matSuffix>looks_two</mat-icon>\n        <mat-icon id=\"bronze\" *ngIf=\"match.id === 2 && joueur.winner\" matSuffix>looks_3</mat-icon>\n        <mat-icon id=\"silver\" *ngIf=\"match.id === 2 && !joueur.winner\" matSuffix>looks_4</mat-icon>\n      </div>\n\n      <div class=\"ngtt__team-wrapper\">\n        <mat-chip-list *ngIf=\"joueur._id\">\n          <mat-chip\n            [disabled]=\"match.joueurs.length === 1 || tableau.is_launched === 2 || disabledMatChip\"\n            (click)=\"setWinner(match, joueur._id._id)\"\n            [color]=\"getColor(match, joueur)\"\n            [class]=\"'ngtt__team-title ' + isClickable(match)\">\n              {{ getName(joueur._id) }}\n            </mat-chip>\n            <span class=\"handicap\" *ngIf=\"tableau.handicap && matchHasTwoPlayers(match.joueurs)\">\n              <b>{{ getHandicap(match.joueurs[0]._id.classement, match.joueurs[1]._id.classement)[index] }}</b>\n            </span>\n        </mat-chip-list>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PoulesService } from '../../Service/poules.service';\nimport { JoueurInterface } from '../../Interface/Joueur';\nimport { PouleInterface } from '../../Interface/Poule';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TableauInterface } from '../../Interface/Tableau';\nimport { TableauService } from '../../Service/tableau.service';\nimport { NotifyService } from '../../Service/notify.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { HandicapComponent } from './handicap/handicap.component';\n\n@Component({\n  selector: 'app-poule',\n  templateUrl: './poule.component.html',\n  styleUrls: ['./poule.component.scss']\n})\nexport class PouleComponent implements OnInit {\n\n  @Input() poules: PouleInterface[] = [];\n  tableau: TableauInterface = {\n    format: null,\n    _id: null,\n    poules: null,\n    nom: null,\n    is_launched: null,\n    consolante: null,\n    maxNumberPlayers: null,\n    age_minimum: null,\n    nbPoules: null,\n    handicap: null\n  };\n  @Output() getAllPoules: EventEmitter<any> = new EventEmitter();\n  private tableauxEditionSubscription: Subscription;\n\n  constructor(private pouleService: PoulesService, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar,\n    private gestionService: TableauService, private notifyService: NotifyService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.getTableau();\n\n      this.tableauxEditionSubscription = this.gestionService.tableauxEditSource.subscribe((tableau: TableauInterface) => {\n        this.tableau = tableau;\n\n        // On change le visuel des toutes les poules si le tableau est terminé\n        if (this.tableau.is_launched === 2) {\n          this.poules = this.poules.map(poule => {\n            poule.locked = true;\n            return poule;\n          })\n        }\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.tableauxEditionSubscription.unsubscribe();\n  }\n\n  getTableau(): void {\n    this.gestionService.getTableau(this.router.url.split('/').pop()).subscribe(tableau => {\n      this.tableau = tableau;\n      this.getAllPoules.emit();\n    });\n  }\n\n  editPoule(event: CdkDragDrop<[id: JoueurInterface], any>, id_poule: string): void {\n    moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    this.pouleService.editPoule(id_poule, event.container.data).subscribe(() => {}, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  setStatus(poule: PouleInterface): void {\n    this.pouleService.setStatus(poule).subscribe(() => this.getAllPoules.emit(), err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  showParticipant(objectRef: string, participant_s): string {\n    if (objectRef === 'Joueurs'){\n      return participant_s.nom + ' - ' + participant_s.classement + ' points';\n    } else if (objectRef === 'Binomes') {\n      return participant_s.joueurs.map((participant, index) => {\n        return (index > 0 ? '<br>' : '') + participant.nom;\n      }).join('');\n    }\n  }\n\n  openMatchesHandicap(listeJoueurs: JoueurInterface[]): void {\n    this.dialog.open(HandicapComponent, {\n      width: '50%',\n      data: {\n        listeJoueurs\n      }\n    });\n  }\n}\n","<div class=\"container\">\n\n  <mat-card *ngIf=\"!poules.length\">\n    <h2 class=\"center lobster\">Il n'y a pas de joueurs inscrits pour le moment</h2>\n  </mat-card>\n\n  <div fxLayout=\"row wrap\">\n    <div [fxFlex]=\"tableau.nbPoules > 2 ? '33%' : '50%'\" *ngFor=\"let poule of poules; let indexList = index\">\n      <mat-card class=\"mat-elevation-z8\">\n\n        <div [style]=\"tableau.handicap ? 'display: flex; justify-content: space-between;' : ''\">\n          <p></p>\n          <h2 class=\"lobster center\">\n            <mat-icon *ngIf=\"poule.locked\" class=\"locked\">check_circle</mat-icon>\n            Poule n°{{indexList+1}}\n          </h2>\n          <button title=\"Fiche des handicaps\" class=\"btn-handicap\" color=\"primary\" *ngIf=\"tableau.handicap\" (click)=\"openMatchesHandicap(poules[indexList].participants)\" mat-icon-button>\n            <mat-icon>format_list_numbered</mat-icon>\n          </button>\n        </div>\n\n        <div\n          cdkDropList\n          [cdkDropListData]=\"poules[indexList].participants\"\n          class=\"list\"\n          (cdkDropListDropped)=\"editPoule($event, poule._id)\">\n          <div [cdkDragData]=\"[poule._id, participant._id]\" [cdkDragDisabled]=\"poule.locked\" class=\"box center\" [ngClass]=\"{ 'tight': (poules[indexList].objectRef === 'Binomes') }\" *ngFor=\"let participant of poules[indexList].participants\" cdkDrag>\n            <span [outerHTML]=\"showParticipant(poules[indexList].objectRef, participant)\"></span>\n          </div>\n        </div>\n        <button [disabled]=\"tableau.is_launched === 2\" (click)=\"setStatus(poule)\" mat-raised-button class=\"center btnSetLockedPoule\" color=\"primary\">{{(poule.locked ? 'Modifier' : 'Valider')}}</button>\n\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormJoueurComponent } from './form-joueur/form-joueur.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormJoueurComponent,\r\n    DialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule\r\n  ],\r\n  exports: [\r\n    FormJoueurComponent\r\n  ]\r\n})\r\nexport class SharedModules {}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JoueurInterface } from '../Interface/Joueur';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BinomeService {\n\n  private baseURL = environment.endpointNodeApi + 'binome/';\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(tableau: string): Observable<any> {\n    return this.http.get(`${this.baseURL}${tableau}`);\n  }\n\n  public editBinome(oldIdBinome: string, newIdBinome: string, newPlayersList: [id: JoueurInterface], idJoueur: string): Observable<any> {\n    return this.http.put(`${this.baseURL}edit/${idJoueur}`, { oldIdBinome, newIdBinome, newPlayersList, idJoueur });\n  }\n\n  public removePlayer(idBinome: string, idPlayer: string): Observable<any> {\n    return this.http.delete(`${this.baseURL}remove_player/${idBinome}/${idPlayer}`);\n  }\n\n  public removeAll(tableau: string): Observable<any> {\n    return this.http.delete(`${this.baseURL}reset/${tableau}`);\n  }\n\n  // Si un tableau devient un format 'double', on créé ses binômes\n  public generateBinomes(tableau: string): Observable<any> {\n    return this.http.put(`${this.baseURL}generate/${tableau}`, null);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { LogsInterface } from '../Interface/LogsInterface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogsService {\r\n\r\n  private baseURL = environment.endpointNodeApi + 'logs/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getAll(): Observable<any> {\r\n    return this.http.get(this.baseURL);\r\n  }\r\n\r\n  public addLogs(log: string): Observable<any> {\r\n    return this.http.put(`${this.baseURL}add`, { log });\r\n  }\r\n\r\n  public emptyLogs(): Observable<any> {\r\n    return this.http.post(`${this.baseURL}empty`, null);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Dialog } from '../../Interface/Dialog';\nimport { DialogComponent } from '../../SharedModule/dialog/dialog.component';\nimport { BracketService } from '../../Service/bracket.service';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NgttTournament } from 'ng-tournament-tree';\nimport { TableauInterface } from '../../Interface/Tableau';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {NotifyService} from '../../Service/notify.service';\n\n@Component({\n  selector: 'app-bracket',\n  templateUrl: './bracket.component.html',\n  styleUrls: ['./bracket.component.scss']\n})\nexport class BracketComponent implements OnInit {\n\n  @Input() phase: string;\n  @Input() tableau: TableauInterface = {\n    _id: null,\n    nom: null,\n    poules: null,\n    format: null,\n    consolante: null,\n    maxNumberPlayers: null,\n    age_minimum: null,\n    is_launched: null,\n    nbPoules: null,\n    handicap: null\n  };\n  spinnerShown: boolean;\n  idTableau: string;\n  public bracket: NgttTournament;\n\n  constructor(private tournoiService: BracketService, private route: ActivatedRoute, private dialog: MatDialog,\n              private snackBar: MatSnackBar, private notifyService: NotifyService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.spinnerShown = false;\n      this.idTableau = params.tableau;\n      this.getBracket();\n    });\n  }\n\n  generateBracket(): void {\n    const accountToDelete: Dialog = {\n      id: 'true',\n      action: 'Régénérer le tableau ?',\n      option: null,\n      action_button_text: 'Régénérer'\n    };\n\n    this.dialog.open(DialogComponent, {\n      width: '45%',\n      data: accountToDelete\n    }).afterClosed().subscribe(value => {\n      if (value){\n        this.spinnerShown = true;\n        this.tournoiService.generateBracket(this.tableau._id, this.tableau.format, this.phase, this.tableau.poules, this.tableau.maxNumberPlayers)\n          .subscribe(() => this.getBracket(), (err) => {\n            this.spinnerShown = false;\n            this.bracket = null;\n            this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n          });\n      }\n    });\n  }\n\n  getBracket(): void {\n    this.tournoiService.getBracket(this.idTableau, this.phase).subscribe(matches => {\n      this.bracket = matches;\n      this.spinnerShown = false;\n    }, err => this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK'));\n  }\n}\n","<div class=\"container\" *ngIf=\"tableau\">\n  <button [disabled]=\"tableau.is_launched === 2\" (click)=\"generateBracket()\" mat-raised-button class=\"center btnGenerateBracket\" color=\"primary\">\n    <mat-icon *ngIf=\"spinnerShown\">\n      <mat-spinner color=\"warn\" [diameter]=\"20\"></mat-spinner>\n    </mat-icon>\n    Générer le tableau\n  </button>\n\n  <mat-card *ngIf=\"tableau.consolante\">\n    <mat-icon class=\"center\">info</mat-icon>\n    <p><b>Pour les consolantes :</b></p>\n    <ul>\n      <li>- si vous souhaitez un repêchage des perdants du premier tour des phases finales en consolantes, renseignez <b>tous les résultats du premier tour de la phase finale</b>, puis générez le tableau de la consolante;</li>\n      <li>- si vous ne souhaitez pas de repêchage, générez le tableau de la consolante <b>AVANT</b> le tableau des phases finales.</li>\n    </ul>\n  </mat-card>\n</div>\n\n<ng-container *ngIf=\"bracket\">\n  <ngtt-single-elimination-tree *ngIf=\"bracket.rounds.length\" [tournament]=\"bracket\" [matchTemplate]=\"matchTemplate\"></ngtt-single-elimination-tree>\n</ng-container>\n\n<ng-template #matchTemplate let-match>\n  <app-match (updateBracket)=\"getBracket()\" [tableau]=\"tableau\" [phase]=\"phase\" [match]=\"match\"></app-match>\n</ng-template>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { JoueurInterface } from 'src/app/Interface/Joueur';\nimport { HandicapService } from 'src/app/Service/handicap.service';\n\n@Component({\n  selector: 'app-handicap',\n  templateUrl: './handicap.component.html',\n  styleUrls: ['./handicap.component.scss']\n})\nexport class HandicapComponent implements OnInit {\n\n  public listeJoueurs: JoueurInterface[] = null;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data, public dialogRef: MatDialogRef<HandicapComponent>, private readonly handicapService: HandicapService) {\n    this.listeJoueurs = data.listeJoueurs;\n  }\n\n  ngOnInit(): void {\n  }\n\n  showHandicap(): string[] {\n    let matchesPoules = [];\n    this.listeJoueurs.forEach(joueur1 => {\n      this.listeJoueurs.forEach(joueur2 => {\n\n        if (joueur1._id !== joueur2._id && matchesPoules.filter(match => {\n          let regex = new RegExp(\".*\" + joueur2.nom + \".*\" + joueur1.nom + \".*\");\n          return match.match(regex);\n        }).length === 0) {\n          matchesPoules.push(joueur1.nom + ' ' + joueur1.classement + ' pts <b>' + this.handicapService.calculHandicap(JSON.parse(JSON.stringify(joueur1.classement)), JSON.parse(JSON.stringify(joueur2.classement)))[0] +\n          '</b> vs <b>' + this.handicapService.calculHandicap(JSON.parse(JSON.stringify(joueur1.classement)), JSON.parse(JSON.stringify(joueur2.classement)))[1] + '</b> ' + ' ' + joueur2.classement + ' pts ' + joueur2.nom + '<br>');\n        }\n\n      });\n    });\n    return matchesPoules;\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 class=\"lobster center\">Handicap</h2>\n\n<div class=\"center\" *ngIf=\"listeJoueurs\">\n  <p *ngFor=\"let match of showHandicap()\" [outerHTML]=\"match\"></p>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-button (click)=\"close()\" color=\"primary\">OK</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JoueurInterface } from '../Interface/Joueur';\nimport { PouleInterface } from '../Interface/Poule';\nimport { TableauInterface } from '../Interface/Tableau';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoulesService {\n\n  private baseURL = environment.endpointNodeApi + 'poule/';\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(tableau: string, format: string): Observable<any> {\n    return this.http.get(`${this.baseURL}${tableau}/${format}`);\n  }\n\n  public editPoule(id_poule: string, newPlayersList: [id: JoueurInterface]): Observable<any> {\n    return this.http.put(`${this.baseURL}edit/${id_poule}`, newPlayersList);\n  }\n\n  public setStatus(poule: PouleInterface): Observable<any> {\n    return this.http.put(`${this.baseURL}editStatus/${poule._id}`, { locked: !poule.locked });\n  }\n\n  public generatePoules(tableau: TableauInterface): Observable<any> {\n    return this.http.put(`${this.baseURL}generate`, tableau);\n  }\n\n  public deletePoules(idTableau: string): Observable<any> {\n    return this.http.delete(`${this.baseURL}delete/${idTableau}`);\n  }\n\n  public validateAllPoules(id_tableau: string): Observable<any> {\n    return this.http.put(`${this.baseURL}validate_all_poules/${id_tableau}`, null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { ParametreInterface } from '../Interface/Parametre';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParametresService {\n\n  private baseURL = environment.endpointNodeApi + 'parametre/';\n\n  constructor(private http: HttpClient) { }\n\n  public getParametres(): Observable<any> {\n    return this.http.get(this.baseURL);\n  }\n\n  public edit(parametres: ParametreInterface): Observable<any> {\n    return this.http.put(`${this.baseURL}edit`, {parametres});\n  }\n\n  public reset(): Observable<any> {\n    return this.http.delete(this.baseURL);\n  }\n\n  public openCloseFormulaire(open: boolean): Observable<any> {\n    return this.http.put(`${this.baseURL}change_form_state`, {open});\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FormulaireComponent } from './formulaire/formulaire.component';\r\nimport { ConfirmFormulaireComponent } from './confirm-formulaire/confirm-formulaire.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: FormulaireComponent, pathMatch: 'full' },\r\n  { path: 'submitted', component: ConfirmFormulaireComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormulaireRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { TableauInterface } from './Interface/Tableau';\nimport { TableauService } from './Service/tableau.service';\nimport { Router } from '@angular/router';\nimport { AccountService } from './Service/account.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NotifyService } from './Service/notify.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy{\n\n  tableaux: TableauInterface[];\n  private tableauxSubscription: Subscription;\n  private tableauxEditionSubscription: Subscription;\n\n  constructor(public accountService: AccountService, private tableauService: TableauService, private router: Router,\n              private snackBar: MatSnackBar, private notifyService: NotifyService) {}\n\n  ngOnInit(): void {\n    if (this.accountService.isLoggedIn()) {\n      this.getAllTableaux();\n    }\n    this.tableauxSubscription = this.tableauService.tableauxSource.subscribe((tableaux: TableauInterface[]) => this.tableaux = tableaux);\n    this.tableauxEditionSubscription = this.tableauService.tableauxEditSource.subscribe((tableau: TableauInterface) => {\n      this.tableaux.map(tab => {\n        if (tab._id === tableau._id) tab.is_launched = tableau.is_launched;\n        return tableau;\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.tableauxSubscription.unsubscribe();\n    this.tableauxEditionSubscription.unsubscribe();\n  }\n\n  getAllTableaux(): void{\n    this.tableauService.getAllTableaux().subscribe(tableaux => this.tableaux = tableaux, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n}\n","<mat-toolbar>\n  <div *ngIf=\"accountService.isLoggedIn()\">\n    <button *ngFor=\"let tableau of tableaux\" mat-raised-button routerLinkActive=\"active\" [routerLink]=\"'/tableau/' + tableau._id\">\n      <span>{{tableau.nom | titlecase}}\n        <span *ngIf=\"tableau.age_minimum !== null\">-{{ tableau.age_minimum}} ans</span></span>\n        <mat-icon class=\"play\" *ngIf=\"tableau.is_launched === 1\">play_arrow</mat-icon>\n        <mat-icon class=\"finished\" *ngIf=\"tableau.is_launched === 2\">check_circle</mat-icon>\n    </button>\n  </div>\n\n  <span class=\"spacer\"></span>\n  <button mat-raised-button *ngIf=\"accountService.isLoggedIn()\" routerLinkActive=\"active\" routerLink=\"/gestion\">Gestion</button>\n  <button mat-raised-button routerLink=\"/formulaire\" routerLinkActive=\"active\">Formulaire</button>\n  <button mat-raised-button *ngIf=\"!accountService.isLoggedIn()\" routerLinkActive=\"active\" routerLink=\"/login\">Espace privé</button>\n  <button mat-raised-button *ngIf=\"accountService.isLoggedIn()\" (click)=\"accountService.logout()\" color=\"warn\">Se déconnecter</button>\n</mat-toolbar>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifyService {\n\n  constructor() { }\n\n  public notifyUser(message: string, snackBar: MatSnackBar, style: string, action?: string): void {\n    snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: ['style-' + style],\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { TableauInterface } from '../../Interface/Tableau';\r\nimport { TableauService } from '../../Service/tableau.service';\r\nimport { ParametresService } from '../../Service/parametres.service';\r\nimport { ParametreInterface } from '../../Interface/Parametre';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { BuffetInterface } from '../../Interface/Buffet';\r\nimport { JoueurInterface } from '../../Interface/Joueur';\r\nimport { JoueurService } from '../../Service/joueur.service';\r\nimport { BuffetService } from '../../Service/buffet.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NotifyService } from '../../Service/notify.service';\r\nimport { PoulesService } from '../../Service/poules.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { LogsService } from 'src/app/Service/logs.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-formulaire',\r\n  templateUrl: './formulaire.component.html',\r\n  styleUrls: ['./formulaire.component.scss']\r\n})\r\nexport class FormulaireComponent implements OnInit {\r\n  /* Champs du formulaire pour les joueurs */\r\n  public tableaux: TableauInterface[];\r\n  public spinnerShown: boolean = false;\r\n\r\n  public parametres: ParametreInterface = {\r\n    texte_debut: null,\r\n    _id: null,\r\n    date: null,\r\n    titre: null,\r\n    texte_buffet: null,\r\n    texte_fin: null,\r\n    consignes_tableaux: null,\r\n    open: null\r\n  };\r\n\r\n  /* Paramètres de l'input avec les Chips */\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  public buffet: BuffetInterface = {\r\n    ado_adulte: 0,\r\n    enfant: 0,\r\n    _id: null,\r\n    plats: []\r\n  };\r\n  public platsAlreadyCooked: string[] = [];\r\n\r\n  /* Dupliquer le formulaire pour un nouveau joueur */\r\n  public joueurData: JoueurInterface = {\r\n    tableaux: [],\r\n    classement: null,\r\n    nom: null,\r\n    buffet: true,\r\n    age: null,\r\n    _id: null,\r\n    pointage: false\r\n  };\r\n  public listeJoueurs: JoueurInterface[] = [];\r\n  public dataSource = new MatTableDataSource<JoueurInterface>([]);\r\n\r\n  constructor(private tableauService: TableauService, private parametreService: ParametresService, private joueurService: JoueurService,\r\n              private buffetService: BuffetService, private router: Router, private snackBar: MatSnackBar, private logsService: LogsService,\r\n              private notifyService: NotifyService, private pouleService: PoulesService, private titleService: Title,\r\n              private datepipe: DatePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getParametres();\r\n    this.titleService.setTitle('Tournoi ESFTT - Formulaire');\r\n  }\r\n\r\n  getTableaux(): void{\r\n    this.tableauService.getAllTableaux().subscribe(tableaux => this.tableaux = tableaux.filter(t => t.is_launched === 0), err => {\r\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n    });\r\n  }\r\n\r\n  getParametres(): void{\r\n    this.parametreService.getParametres().subscribe(parametres => {\r\n      this.parametres = parametres;\r\n      if (this.parametres.open) {\r\n        this.getTableaux();\r\n        this.getPlatsAlreadyCooked();\r\n      }\r\n    }, err => {\r\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n    });\r\n  }\r\n\r\n  getPlatsAlreadyCooked(): void{\r\n    this.buffetService.platsAlreadyCooked().subscribe(plats => this.platsAlreadyCooked = plats, err => {\r\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n    });\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    if ((value || '').trim()) this.buffet.plats.push(value.trim());\r\n    if (input) { input.value = ''; }\r\n  }\r\n\r\n  remove(plat: string): void {\r\n    const index = this.buffet.plats.indexOf(plat);\r\n    if (index >= 0) this.buffet.plats.splice(index, 1);\r\n  }\r\n\r\n  addJoueur($item): void {\r\n    this.joueurData = {\r\n      tableaux: [],\r\n      classement: null,\r\n      nom: null,\r\n      buffet: true,\r\n      age: null,\r\n      _id: null,\r\n      pointage: false\r\n    };\r\n    this.listeJoueurs.push($item);\r\n    this.dataSource.data = this.listeJoueurs;\r\n  }\r\n\r\n  removeItem($item): void {\r\n    this.listeJoueurs.splice( this.listeJoueurs.indexOf($item), 1);\r\n  }\r\n\r\n  async submit() {\r\n    this.spinnerShown = true;\r\n    let errOf: string[] = [];\r\n    let tabOf: any = [];\r\n\r\n    // On construit le log\r\n    let logMessage: string = 'Le ' + this.datepipe.transform(new Date(), 'dd/MM/yyyy à HH:mm') + ' :\\n';\r\n    logMessage += 'Buffet :\\n  - Nombre d\\'enfants : ' + this.buffet.enfant + '\\n  - Nombre d\\'ados/adultes : ' + this.buffet.ado_adulte + '\\n  - Plats préparés : ' + (this.buffet.plats.length > 0 ? this.buffet.plats.join(', ') : '(aucun)') + '\\n\\n';\r\n\r\n    // Enregistrement des données du buffet\r\n    tabOf.push(this.buffetService.register(this.buffet));\r\n\r\n    if (this.listeJoueurs.length > 0) {\r\n      // Inscription des joueurs\r\n      this.listeJoueurs.forEach(joueur => {\r\n        logMessage += 'Nom : ' + joueur.nom.toUpperCase() + ' - Classement : ' + ((joueur.classement || joueur.classement > 0) ? joueur.classement + ' pts' : '/' ) + ' - Age : ' + (joueur.age ? + joueur.age + ' ans' : '/' ) + ' - Tableaux : [' + joueur.tableaux.map(t => t.nom.toUpperCase()).join(' , ') + '] - Buffet : ' + (joueur.buffet ? 'oui' : 'non') + '\\n';\r\n        tabOf.push(this.joueurService.create(joueur.tableaux, joueur));\r\n      });\r\n\r\n      // Tableaux des joueurs souscris\r\n      const tableauxSubscribed: TableauInterface[] = <TableauInterface[]>[...new Set(this.listeJoueurs.map(joueur => joueur.tableaux.filter(tableau => tableau.poules && tableau.format === 'simple' && tableau.is_launched === 0)).reduce((acc, val) => acc.concat(val), []))];\r\n      if (tableauxSubscribed.length > 0) tableauxSubscribed.forEach(tabSub => tabOf.push(this.pouleService.generatePoules(tabSub)));\r\n    } else logMessage += '(pas de joueurs)';\r\n\r\n    tabOf.push(this.logsService.addLogs(logMessage));\r\n\r\n    for (let obs of tabOf){\r\n      await obs.toPromise().then().catch(err => errOf.push(err.error));\r\n    };\r\n\r\n    this.spinnerShown = false;\r\n    if (errOf.length > 0) this.notifyService.notifyUser(errOf.join(' - '), this.snackBar, 'error', 'OK');\r\n    else this.router.navigate(['submitted'], { state: { summary: logMessage } });\r\n  }\r\n\r\n  disabledAddPlayer(joueurData: JoueurInterface): boolean {\r\n    return !(joueurData.nom !== null && joueurData.nom !== '' && joueurData.tableaux.length > 0);\r\n  }\r\n\r\n  disabledSubmit(): boolean {\r\n    return (this.listeJoueurs.length === 0 && this.buffet.enfant === 0 && this.buffet.ado_adulte === 0 && this.buffet.plats.length === 0) || this.spinnerShown || this.isPlayerSubscribing();\r\n  }\r\n\r\n  platsAlreadyCookedEmpty(): boolean {\r\n    return (this.platsAlreadyCooked ? this.platsAlreadyCooked.length === 0 : false);\r\n  }\r\n\r\n  clickable(tableau: TableauInterface, joueurAge: number): boolean {\r\n    return tableau.age_minimum !== null && (joueurAge === null || joueurAge >= tableau.age_minimum);\r\n  }\r\n\r\n  typing(joueur: JoueurInterface): void {\r\n    joueur.tableaux = joueur.tableaux.filter(tableau => !(joueur.age <= tableau.age_minimum && tableau.age_minimum !== null));\r\n  }\r\n\r\n  isPlayerSubscribing(): boolean {\r\n    return !(this.joueurData.age === null && (this.joueurData.nom === null || this.joueurData.nom === '') && this.joueurData.tableaux.length === 0 && this.joueurData.classement === null);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <mat-card *ngIf=\"parametres.open !== null && !parametres.open\">\r\n    <h1 class=\"lobster center\">Les inscriptions au tournoi sont fermées ...</h1>\r\n  </mat-card >\r\n\r\n  <mat-card *ngIf=\"parametres.open !== null && parametres.open\">\r\n    <p [innerHTML]=\"parametres.titre\" class=\"center\"></p>\r\n    <h2 class=\"center lobster\">{{parametres.date | date:\"dd/MM/yyyy\"}}</h2>\r\n\r\n    <p [innerHTML]=\"parametres.texte_debut | noSanitize\"></p>\r\n\r\n    <br>\r\n    <h2 class=\"lobster\">1. Inscription aux tableaux</h2>\r\n    <div [innerHTML]=\"parametres.consignes_tableaux | noSanitize\"></div>\r\n\r\n    <div *ngFor=\"let joueurItem of listeJoueurs\">\r\n      <form>\r\n        <div fxLayout=\"row\" fxLayout.lt-md=\"column\" class=\"form_inputs_player\">\r\n          <div fxFlex=\"25%\" fxFlex.lt-md=\"100%\">\r\n            <mat-form-field appearance=\"outline\" class=\"center\">\r\n              <mat-label>NOM Prénom *</mat-label>\r\n              <input name=\"nom\" [(ngModel)]=\"joueurItem.nom\" matInput>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"15%\" fxFlex.lt-md=\"100%\">\r\n            <mat-form-field appearance=\"outline\" class=\"center\">\r\n              <mat-label>Classement mensuel</mat-label>\r\n              <input name=\"classement\" [(ngModel)]=\"joueurItem.classement\" type=\"number\" min=\"0\" max=\"2000\" matInput>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"15%\" fxFlex.lt-md=\"100%\">\r\n            <mat-form-field appearance=\"outline\" class=\"center\">\r\n              <mat-label>Âge</mat-label>\r\n              <input (input)=\"typing(joueurItem)\" name=\"age\" [(ngModel)]=\"joueurItem.age\" type=\"number\" min=\"5\" max=\"99\" matInput>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"30%\" fxFlex.lt-md=\"100%\">\r\n            <mat-form-field appearance=\"outline\" class=\"center\">\r\n              <mat-label>Tableaux *</mat-label>\r\n              <mat-select name=\"tableaux\" [(ngModel)]=\"joueurItem.tableaux\" multiple>\r\n                <mat-option [disabled]=\"clickable(tableau, joueurItem.age)\" *ngFor=\"let tableau of tableaux\" [value]=\"tableau\"><span>{{tableau.nom | titlecase}} <span *ngIf=\"tableau.age_minimum !== null\">-{{ tableau.age_minimum}} ans</span></span></mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"15%\" fxFlex.lt-md=\"100%\">\r\n            <button mat-raised-button (click)=\"removeItem(joueurItem)\" class=\"center btn_action delete\" color=\"warn\">Effacer ce joueur</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <form>\r\n      <div fxLayout=\"row\" fxLayout.lt-md=\"column\" class=\"form_inputs_player\">\r\n        <div fxFlex=\"25%\" fxFlex.lt-md=\"100%\">\r\n          <mat-form-field appearance=\"outline\" class=\"center\">\r\n            <mat-label>NOM Prénom *</mat-label>\r\n            <input name=\"nom\" [(ngModel)]=\"joueurData.nom\" matInput>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"15%\" fxFlex.lt-md=\"100%\">\r\n          <mat-form-field appearance=\"outline\" class=\"center\">\r\n            <mat-label>Classement</mat-label>\r\n            <input name=\"classement\" [(ngModel)]=\"joueurData.classement\" type=\"number\" min=\"0\" max=\"2000\" matInput>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"15%\" fxFlex.lt-md=\"100%\">\r\n          <mat-form-field appearance=\"outline\" class=\"center\">\r\n            <mat-label>Âge</mat-label>\r\n            <input (input)=\"typing(joueurData)\" name=\"age\" [(ngModel)]=\"joueurData.age\" type=\"number\" min=\"0\" max=\"99\" matInput>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"30%\" fxFlex.lt-md=\"100%\">\r\n          <mat-form-field appearance=\"outline\" class=\"center\">\r\n            <mat-label>Tableaux *</mat-label>\r\n            <mat-select name=\"tableaux\" [(ngModel)]=\"joueurData.tableaux\" multiple>\r\n              <mat-option [disabled]=\"clickable(tableau, joueurData.age)\" *ngFor=\"let tableau of tableaux\" [value]=\"tableau\"><span>{{tableau.nom | titlecase}} <span *ngIf=\"tableau.age_minimum !== null\">-{{ tableau.age_minimum}} ans</span></span></mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"15%\" fxFlex.lt-md=\"100%\">\r\n          <button class=\"center btn_action\" [disabled]=\"disabledAddPlayer(joueurData)\" (click)=\"addJoueur(joueurData)\" mat-raised-button color=\"primary\">Valider ce joueur</button>\r\n        </div>\r\n      </div>\r\n\r\n    </form><br>\r\n\r\n    <br>\r\n    <h2 class=\"lobster\">2. Participation au buffet du soir</h2>\r\n    <p [innerHTML]=\"parametres.texte_buffet | noSanitize\"></p>\r\n\r\n    <div class=\"nbParticipants\">\r\n      <h3 class=\"lobster\">Nombre d'enfants au total</h3>\r\n      <mat-form-field class=\"shorten\" appearance=\"outline\">\r\n        <input matInput type=\"number\" min=\"0\" max=\"20\" [(ngModel)]=\"buffet.enfant\" name=\"enfant\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"nbParticipants\">\r\n      <h3 class=\"lobster\">Nombre d'ados/adultes au total</h3>\r\n      <mat-form-field class=\"shorten\" appearance=\"outline\">\r\n        <input matInput type=\"number\" min=\"0\" max=\"20\" [(ngModel)]=\"buffet.ado_adulte\" name=\"ado_adulte\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"listeJoueurs.length\">\r\n      <br>\r\n      <h3 class=\"lobster\">Participation des joueurs au buffet</h3>\r\n\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n        <ng-container matColumnDef=\"nom\">\r\n          <th mat-header-cell *matHeaderCellDef>Nom</th>\r\n          <td mat-cell *matCellDef=\"let joueur\"> {{joueur.nom}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"buffet\">\r\n          <th mat-header-cell *matHeaderCellDef>Buffet</th>\r\n          <td mat-cell *matCellDef=\"let joueur\">\r\n            <mat-slide-toggle\r\n              color=\"primary\"\r\n              (change)=\"joueur.buffet = !joueur.buffet\"\r\n              [checked]=\"joueur.buffet\">\r\n            </mat-slide-toggle>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"['nom', 'buffet']\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['nom', 'buffet'];\"></tr>\r\n      </table>\r\n    </div>\r\n\r\n    <br>\r\n    <h3 class=\"lobster\">Plat(s) confectionné(s)</h3>\r\n\r\n    <p class=\"alerte_info\">\r\n      <mat-icon aria-hidden=\"false\">info</mat-icon>\r\n      <i> Appuyez sur la touche <strong>'Entrée'</strong> de votre clavier pour ajouter un plat à votre liste</i>\r\n    </p>\r\n\r\n    <mat-form-field class=\"chip-list\" appearance=\"outline\">\r\n      <mat-chip-list #chipList aria-label=\"Fruit selection\">\r\n        <mat-chip *ngFor=\"let plat of buffet.plats\" [selectable]=\"selectable\" [removable]=\"removable\" (removed)=\"remove(plat)\" color=\"primary\" selected>\r\n          {{plat}}\r\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n        </mat-chip>\r\n        <input [matChipInputFor]=\"chipList\"\r\n              [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n              [matChipInputAddOnBlur]=\"addOnBlur\"\r\n              type=\"text\"\r\n              placeholder=\"Plats préparés\"\r\n              (matChipInputTokenEnd)=\"add($event)\">\r\n      </mat-chip-list>\r\n    </mat-form-field>\r\n\r\n    <br>\r\n    <p><i>Plats déjà préparés :</i></p>\r\n    <mat-chip-list *ngIf=\"!platsAlreadyCookedEmpty(); else noPlatsAlreadyCooked\">\r\n      <mat-chip *ngFor=\"let plat of platsAlreadyCooked\" color=\"primary\" selected>{{ plat }}</mat-chip>\r\n    </mat-chip-list>\r\n    <ng-template #noPlatsAlreadyCooked><p>(Aucun)</p></ng-template><br>\r\n\r\n    <br>\r\n    <h2 class=\"lobster\">3. Validez le formulaire !</h2>\r\n\r\n    <p class=\"alerte_pill center\" *ngIf=\"isPlayerSubscribing()\">Un joueur est en cours d'inscription et n'a pas été validé.<br><i>(Rappel : cliquez sur le bouton bleu <b>Valider le joueur</b> pour inscrire chaque participant.)</i></p>\r\n    <button [disabled]=\"disabledSubmit()\" class=\"center\" mat-raised-button color=\"primary\" (click)=\"submit()\">\r\n      <mat-icon *ngIf=\"spinnerShown\">\r\n        <mat-spinner color=\"accent\" [diameter]=\"20\"></mat-spinner>\r\n      </mat-icon>\r\n      Envoyer !\r\n    </button>\r\n    <br>\r\n    <br>\r\n\r\n    <div [innerHTML]=\"parametres.texte_fin | noSanitize\"></div><br>\r\n\r\n  </mat-card>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({ name: 'noSanitize' })\nexport class NoSanitizePipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {\n\n  }\n  transform(html: string): SafeHtml {\n    return this.domSanitizer.bypassSecurityTrustHtml(html);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from './account.service';\nimport { environment } from '../../environments/environment';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptorInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AccountService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: (this.authService.getToken() ? this.authService.getToken() : environment.anonymousHeader)\n      }\n    });\n    return next.handle(request).pipe(\n      catchError((err) => {\n        if (err.status && err.status === 401) {\n          err.error = \"Votre session est terminée\";\n          this.authService.logout();\n        }\n        throw err;\n      }),\n      map((res: any) => res));\n  }\n}\n","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { JoueurService } from '../../Service/joueur.service';\nimport { JoueurInterface } from '../../Interface/Joueur';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Dialog } from '../../Interface/Dialog';\nimport { DialogComponent } from '../../SharedModule/dialog/dialog.component';\nimport { PoulesService } from '../../Service/poules.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TableauInterface} from '../../Interface/Tableau';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NotifyService } from '../../Service/notify.service';\nimport { TableauService} from '../../Service/tableau.service';\nimport { BinomeService } from '../../Service/binome.service';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-list-players',\n  templateUrl: './list-players.component.html',\n  styleUrls: ['./list-players.component.scss']\n})\nexport class ListPlayersComponent implements OnInit {\n\n  displayedColumns: string[];\n  hostableTableau: TableauInterface;\n  tableau: TableauInterface = {\n    format: null,\n    _id: null,\n    is_launched: null,\n    nom: null,\n    poules: null,\n    consolante: null,\n    maxNumberPlayers: null,\n    age_minimum: null,\n    nbPoules: null,\n    handicap: null\n  };\n  listJoueurs: JoueurInterface[] = [];\n  listTableauHostable: TableauInterface[] = [];\n  otherPlayers: JoueurInterface[] = [];\n  joueur: JoueurInterface;\n  joueurControl = new FormControl('');\n  optionsListJoueurs: Observable<JoueurInterface[]>;\n  showAutocomplete = false;\n  private tableauxEditionSubscription: Subscription;\n  dataSource = new MatTableDataSource(this.listJoueurs);\n  showChapeauColors: boolean = false;\n  @Output() generatePoules: EventEmitter<any> = new EventEmitter();\n  @Output() getAllBinomes: EventEmitter<any> = new EventEmitter();\n  @Output() getSubscribedUnassignedPlayers: EventEmitter<any> = new EventEmitter();\n  @ViewChild(MatSort) sort = new MatSort();\n\n  constructor(private joueurService: JoueurService, public dialog: MatDialog, private poulesService: PoulesService, private router: Router,\n              private route: ActivatedRoute, private snackBar: MatSnackBar, private notifyService: NotifyService,\n              private tableauService: TableauService, private binomeService: BinomeService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.joueur = {\n        nom: null,\n        age : null,\n        buffet: null,\n        classement: null,\n        _id: null,\n        tableaux: null,\n        pointage: null\n      };\n\n      this.getTableau(this.router.url.split('/').pop());\n      this.hostableTableau = null;\n\n      if (this.otherPlayers) {\n        this.optionsListJoueurs = this.joueurControl.valueChanges.pipe(\n          startWith(''),\n          map(value => this._filter(value))\n        );\n      }\n\n      this.tableauxEditionSubscription = this.tableauService.tableauxEditSource.subscribe((tableau: TableauInterface) => {\n        this.tableau = tableau;\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.tableauxEditionSubscription.unsubscribe();\n  }\n\n  _filter(value: string): JoueurInterface[] {\n    if (value && this.otherPlayers != null){\n      const filterValue = value.toLowerCase();\n      return this.otherPlayers.filter(joueur => joueur.nom.toLowerCase().includes(filterValue)\n        && (this.tableau.age_minimum !== null ? (joueur.age !== null && joueur.age < this.tableau.age_minimum) : true));\n    } else { return []; }\n  }\n\n  typingAutocomplete(event): void{\n    this.showAutocomplete = event && event.length > 0;\n  }\n\n  getAllPlayers(): void {\n    this.joueurService.getTableauPlayers(this.tableau._id).subscribe(joueurs => {\n      this.listJoueurs = joueurs;\n      this.dataSource = new MatTableDataSource(joueurs);\n      this.dataSource.sort = this.sort;\n    }, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  getTableau(tableau_id: string): void {\n    this.tableauService.getTableau(tableau_id).subscribe(tableau => {\n      this.tableau = tableau;\n      this.getAllPlayers();\n      this.getUnsubscribedPlayers();\n      this.displayedColumns = (this.tableau.age_minimum !== null ?\n        ['nom', 'classement', 'age', 'delete'] : ['nom', 'classement', 'delete']);\n      if (this.tableau.age_minimum) this.getTableauxHostable();\n    }, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  getTableauxHostable(): void {\n    this.tableauService.tableauEnabledToHostPlayers(this.tableau).subscribe(\n      listTableaux => this.listTableauHostable = listTableaux, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  getUnsubscribedPlayers(): void {\n    this.joueurService.getUnsubscribedPlayer(this.tableau._id).subscribe(joueurs => this.otherPlayers = joueurs, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  subscribe(): void {\n    this.joueurService.create([this.tableau], this.joueur).subscribe(() => {\n      this.joueur = {\n        classement : null,\n        age : null,\n        nom : null,\n        _id : null,\n        buffet: null,\n        pointage: false,\n        tableaux: null\n      };\n      if (this.tableau.poules && this.tableau.format === 'simple') this.generatePoules.emit();\n      if (this.tableau.format === 'double') {\n        this.getAllBinomes.emit();\n        this.getSubscribedUnassignedPlayers.emit();\n      }\n      this.getAllPlayers();\n      this.getUnsubscribedPlayers();\n    }, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  unsubscribePlayer(joueur_id: string): void {\n    this.joueurService.unsubscribe(this.tableau, joueur_id).subscribe(() => {\n      if (this.tableau.poules) this.generatePoules.emit();\n      if (this.tableau.format === 'double') {\n        this.getAllBinomes.emit();\n        this.getSubscribedUnassignedPlayers.emit();\n      }\n      this.getAllPlayers();\n      this.getUnsubscribedPlayers();\n    }, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  unsubscribeAllPlayers(): void {\n    this.tableauService.unsubscribeAllPlayers(this.tableau._id).subscribe(() => {\n      if (this.tableau.format === 'double') {\n        this.removeAllBinomes();\n      }\n      else if (this.tableau.poules) this.generatePoules.emit();\n      this.getAllPlayers();\n      this.getUnsubscribedPlayers();\n    }, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  unsubscribe(joueur: JoueurInterface): void {\n    const playerToDelete: Dialog = {\n      id: joueur._id,\n      action: 'Désinscrire le joueur du tableau et régénérer les poules du tableau ?',\n      option: null,\n      action_button_text: 'Désinscrire'\n    };\n\n    this.dialog.open(DialogComponent, {\n      width: '45%',\n      data: playerToDelete\n    }).afterClosed().subscribe(id_joueur => {\n      if (id_joueur){\n        this.unsubscribePlayer(id_joueur);\n      }\n    });\n  }\n\n  isInvalidPlayer(): boolean {\n    return (this.joueur.nom !== null && this.joueur.nom.trim() !== ''\n      && this.otherPlayers.filter(joueur => this.joueur.nom === joueur.nom).length !== 0);\n  }\n\n  unsubscribeAll(): void {\n    const playersToDelete: Dialog = {\n      id: 'true',\n      action: 'Désinscrire tous les joueurs du tableau ?',\n      option: null,\n      action_button_text: 'Désinscrire'\n    };\n\n    this.dialog.open(DialogComponent, {\n      width: '45%',\n      data: playersToDelete\n    }).afterClosed().subscribe(id_tableau => {\n      if (id_tableau){\n        this.unsubscribeAllPlayers();\n\n        if (this.tableau.format === 'double') {\n          this.getAllBinomes.emit();\n          this.getSubscribedUnassignedPlayers.emit();\n        }\n      }\n    });\n  }\n\n  moveAllPlayers(): void {\n    const playersToDelete: Dialog = {\n      id: this.hostableTableau._id,\n      action: 'Basculer tous les joueurs dans ce tableau et régénérer les poules ?',\n      option: null,\n      action_button_text: 'Basculer'\n    };\n\n    this.dialog.open(DialogComponent, {\n      width: '45%',\n      data: playersToDelete\n    }).afterClosed().subscribe(id_hostable_tableau => {\n      if (id_hostable_tableau){\n        this.joueurService.moveAllPlayers(this.tableau._id, this.hostableTableau._id).subscribe(() =>\n        {\n          this.getAllPlayers();\n          this.generateHostablePoules();\n          if (this.tableau.poules) this.generatePoules.emit();\n          if (this.tableau.format === 'double') {\n            this.getAllBinomes.emit();\n            this.getSubscribedUnassignedPlayers.emit();\n          }\n          this.notifyService.notifyUser('Les joueurs ont été basculés', this.snackBar, 'success','OK');\n        }, err => this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK'));\n      }\n    });\n  }\n\n  generateHostablePoules(): void {\n    this.poulesService.generatePoules(this.hostableTableau).subscribe(() => {}, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  playersMovable(): boolean {\n    return (this.tableau.age_minimum !== null && this.listTableauHostable.length && this.listJoueurs.length > 0);\n  }\n\n  removeAllBinomes(): void {\n    this.binomeService.removeAll(this.tableau._id).subscribe(() => {\n      if (this.tableau.poules) this.generatePoules.emit();\n      if (this.tableau.format === 'double') {\n        this.getAllBinomes.emit();\n        this.getSubscribedUnassignedPlayers.emit();\n      }\n    }, err => {\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\n    });\n  }\n\n  showChapeau(sortState: Sort) {\n    this.showChapeauColors = sortState.active === 'classement' && sortState.direction == 'desc';\n  }\n\n  isChapeauHaut(i: number): string {\n    if (this.showChapeauColors) {\n      let listJoueursLength = (this.listJoueurs.length % 2 ? this.listJoueurs.length/2 : (this.listJoueurs.length/2) + 0.5);\n      return i >= listJoueursLength ? 'chapeauBas' : 'chapeauHaut';\n    }\n    return '';\n  }\n}\n","<div class=\"container\">\n\n  <mat-card *ngIf=\"tableau.is_launched === 0\">\n    <h2 class=\"lobster center\">Inscrire un joueur</h2>\n\n    <form (submit)=\"subscribe()\">\n      <mat-form-field appearance=\"outline\" class=\"center\">\n        <mat-icon matSuffix>title</mat-icon>\n        <mat-label>Nom du joueur</mat-label>\n        <input type=\"text\" name=\"nom\" [formControl]=\"joueurControl\" [(ngModel)]=\"joueur.nom\" [matAutocomplete]=\"auto\" matInput (ngModelChange)=\"typingAutocomplete($event)\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let joueur of optionsListJoueurs | async\" [value]=\"joueur.nom\" [ngClass]=\"{'hide-autocomplete': !showAutocomplete}\">\n            {{joueur.nom}} - {{joueur.classement}} points\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n\n      <button mat-raised-button class=\"center\" color=\"primary\" [disabled]=\"!isInvalidPlayer()\">Inscrire</button>\n    </form>\n  </mat-card>\n\n  <mat-card>\n    <h2 class=\"lobster center second_h2\">Liste des joueurs ({{listJoueurs.length}} inscrit<span *ngIf=\"listJoueurs.length > 1\">s</span>)</h2>\n\n    <div fxLayout=\"row\">\n      <div [fxFlex]=\"playersMovable() ? '50%' : '100%'\" class=\"vertically_centered\">\n        <button [disabled]=\"tableau.is_launched !== 0\" (click)=\"unsubscribeAll()\" *ngIf=\"listJoueurs.length\" class=\"center unsubscribeAll\" mat-raised-button color=\"warn\">Désinscrire tous les joueurs</button>\n      </div>\n      <div fxFlex=\"50%\" *ngIf=\"playersMovable()\" class=\"vertically_centered\">\n        <div fxLayout=\"column\">\n          <div fxFlex=\"50%\">\n            <button [disabled]=\"hostableTableau === null\" (click)=\"moveAllPlayers()\" class=\"center movePlayers\" mat-raised-button>Basculer tous les joueurs</button>\n          </div>\n          <div fxFlex=\"50%\">\n            <mat-form-field appearance=\"outline\" class=\"center\">\n              <mat-icon matSuffix>format_list_bulleted</mat-icon>\n              <mat-label>Tableaux</mat-label>\n              <mat-select [(ngModel)]=\"hostableTableau\">\n                <mat-option *ngFor=\"let tableau of listTableauHostable\" [value]=\"tableau\">{{ tableau.nom | titlecase }} - {{ tableau.age_minimum }} ans</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <table mat-table [dataSource]=\"dataSource\" [hidden]=\"!listJoueurs.length\" matSort (matSortChange)=\"showChapeau($event)\">\n\n      <ng-container matColumnDef=\"nom\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n        <td [class]=\"isChapeauHaut(i)\" mat-cell *matCellDef=\"let joueur; let i = index;\" [ngClass]=\"{'pointage_KO': !joueur.pointage, 'pointage_OK': joueur.pointage}\">{{joueur.nom}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"classement\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n          Classement\n        </th>\n        <td [class]=\"isChapeauHaut(i)\" mat-cell *matCellDef=\"let joueur; let i = index;\">{{joueur.classement}}</td>\n      </ng-container>\n\n      <ng-container *ngIf=\"tableau.age_minimum !== null\" matColumnDef=\"age\">\n        <th mat-header-cell *matHeaderCellDef>Âge</th>\n        <td mat-cell *matCellDef=\"let joueur\">{{joueur.age}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"delete\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let joueur\">\n          <button [disabled]=\"tableau.is_launched !== 0\"  (click)=\"unsubscribe(joueur)\" mat-raised-button color=\"warn\">Désinscrire</button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n  </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TournamentModules } from './TournamentModule/tournament.modules';\r\nimport { MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WildcardModules } from './wildcard.modules';\r\nimport { CoreModules } from './core.modules';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormulaireModules } from './FormulaireModule/formulaire.modules';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TournamentModules,\r\n    FormulaireModules,\r\n    WildcardModules,\r\n    CoreModules\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatchComponent } from './match/match.component';\r\nimport { TableauComponent } from './tableau/tableau.component';\r\nimport { ListPlayersComponent } from './list-players/list-players.component';\r\nimport { PouleComponent } from './poule/poule.component';\r\nimport { BracketComponent } from './bracket/bracket.component';\r\nimport { BinomeComponent } from './binome/binome.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { NgTournamentTreeModule } from 'ng-tournament-tree';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { TournamentRoutingModule } from './tournament-routing.module';\r\nimport { SharedModules } from '../SharedModule/shared.modules';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { HandicapComponent } from './poule/handicap/handicap.component';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MatchComponent,\r\n    TableauComponent,\r\n    ListPlayersComponent,\r\n    PouleComponent,\r\n    BracketComponent,\r\n    BinomeComponent,\r\n    HandicapComponent\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    DragDropModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    NgTournamentTreeModule,\r\n    NgTournamentTreeModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatChipsModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    TournamentRoutingModule,\r\n    SharedModules,\r\n    MatSortModule\r\n  ]\r\n})\r\nexport class TournamentModules {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TableauService } from '../../Service/tableau.service';\r\nimport { TableauInterface } from '../../Interface/Tableau';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NotifyService } from '../../Service/notify.service';\r\nimport { PoulesService } from '../../Service/poules.service';\r\nimport { PouleInterface } from '../../Interface/Poule';\r\nimport { BinomeService } from '../../Service/binome.service';\r\nimport { BinomeInterface } from '../../Interface/Binome';\r\nimport { JoueurService } from '../../Service/joueur.service';\r\nimport { JoueurInterface } from '../../Interface/Joueur';\r\nimport { Dialog } from '../../Interface/Dialog';\r\nimport { DialogComponent } from '../../SharedModule/dialog/dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-tableau',\r\n  templateUrl: './tableau.component.html',\r\n  styleUrls: ['./tableau.component.scss']\r\n})\r\nexport class TableauComponent implements OnInit {\r\n\r\n  tableau: TableauInterface = {\r\n    _id: null,\r\n    format: null,\r\n    nom: null,\r\n    poules: null,\r\n    is_launched: null,\r\n    consolante: null,\r\n    maxNumberPlayers: null,\r\n    age_minimum: null,\r\n    nbPoules: null,\r\n    handicap: null\r\n  };\r\n\r\n  // Input variables\r\n  poules: PouleInterface[] = [];\r\n  binomes: BinomeInterface[] = [];\r\n  subscribedUnassignedPlayers: JoueurInterface[] = [];\r\n\r\n  constructor(private tableauService: TableauService, private route: ActivatedRoute, private router: Router, private snackBar: MatSnackBar,\r\n              private notifyService: NotifyService, private pouleService: PoulesService, private binomeService: BinomeService,\r\n              private joueurService: JoueurService, public dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.getTableau(params.tableau);\r\n    });\r\n  }\r\n\r\n  getTableau(idTableau: string): void {\r\n    this.tableauService.getTableau(idTableau).subscribe(tableau => this.tableau = tableau, err => {\r\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n      this.router.navigate(['/error-page']);\r\n    });\r\n  }\r\n\r\n  changeStateTableau(): void {\r\n    const stateToChange: Dialog = {\r\n      id: 'true',\r\n      action: this.tableau.is_launched === 1 ? 'Terminer le tableau ?' : 'Lancer les ' + (this.tableau.poules ? 'poules' : 'phases finales') + ' ?',\r\n      option: this.tableau.is_launched === 0 ? 'Aucun joueur ne pourra plus s\\'inscrire ni se désinscrire au tableau' + (this.tableau.format === 'double' ? ' et les binômes seront bloqués' : '') : 'Les ' + (this.tableau.poules ? 'poules' : 'binômes') + ' et phases finales seront validé' + (this.tableau.poules ? 'e' : '') +'s et bloqué' + (this.tableau.poules ? 'e' : '') +'s',\r\n      action_button_text: this.tableau.is_launched === 1 ? 'Terminer' : 'Lancer'\r\n    };\r\n\r\n    this.dialog.open(DialogComponent, {\r\n      width: '55%',\r\n      data: stateToChange\r\n    }).afterClosed().subscribe(response => {\r\n      if (response){\r\n        this.tableau.is_launched++;\r\n        this.tableauService.tableauxEditSource.next(this.tableau);\r\n        this.tableauService.changeLaunchState(this.tableau).subscribe(() => {\r\n          if (this.tableau.poules && this.tableau.is_launched === 2) this.pouleService.validateAllPoules(this.tableau._id).subscribe();\r\n        }, err => {\r\n          this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // Output functions\r\n  getAllPoules(): void {\r\n    this.pouleService.getAll(this.tableau._id, this.tableau.format).subscribe(poules => this.poules = poules, err => {\r\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n    });\r\n  }\r\n\r\n  generatePoules(): void {\r\n    this.pouleService.generatePoules(this.tableau).subscribe(() => this.getAllPoules(), err => {\r\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n    });\r\n  }\r\n\r\n  getAllBinomes(): void {\r\n    this.binomeService.getAll(this.tableau._id).subscribe(binomes => this.binomes = binomes, err => {\r\n      this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK');\r\n    });\r\n  }\r\n\r\n  getSubscribedUnassignedPlayers(): void {\r\n    this.joueurService.getSubscribedUnassignedDouble(this.tableau._id).subscribe(joueurs => this.subscribedUnassignedPlayers = joueurs,\r\n      err => this.notifyService.notifyUser(err.error, this.snackBar, 'error','OK'));\r\n  }\r\n}\r\n","<h1 class=\"lobster center\"><span>{{tableau.nom | titlecase}} <span *ngIf=\"tableau.age_minimum !== null\">-{{ tableau.age_minimum}} ans</span></span></h1>\n\n<div id=\"actionButtons\">\n  <button mat-raised-button id=\"launchTableau\" *ngIf=\"tableau.is_launched === 0\" (click)=\"changeStateTableau()\">Lancer les {{ tableau.poules ? 'poules' : 'phases finales' }}</button>\n  <button mat-raised-button id=\"finishTableau\" *ngIf=\"tableau.is_launched === 1\" (click)=\"changeStateTableau()\">Terminer le tableau</button>\n</div>\n\n<mat-tab-group mat-align-tabs=\"center\" color=\"accent\" dynamicHeight=\"200%\" selectedIndex=\"0\" *ngIf=\"tableau._id\">\n\n  <mat-tab>\n    <ng-template mat-tab-label class=\"mat-tab-label\">Participants</ng-template>\n    <app-list-players\n      (generatePoules)=\"generatePoules()\"\n      (getAllBinomes)=\"getAllBinomes()\"\n      (getSubscribedUnassignedPlayers)=\"getSubscribedUnassignedPlayers()\">\n    </app-list-players>\n  </mat-tab>\n\n  <mat-tab *ngIf=\"tableau.format === 'double'\">\n    <ng-template mat-tab-label class=\"mat-tab-label\">Binômes</ng-template>\n    <app-binome (getSubscribedUnassignedPlayers)=\"getSubscribedUnassignedPlayers()\"\n                (getAllBinomes)=\"getAllBinomes()\"\n                (generatePoules)=\"generatePoules()\"\n                [binomes]=\"binomes\"\n                [subscribedUnassignedPlayers]=\"subscribedUnassignedPlayers\">\n    </app-binome>\n  </mat-tab>\n\n  <mat-tab *ngIf=\"tableau.poules\">\n    <ng-template mat-tab-label class=\"mat-tab-label\">Poules</ng-template>\n    <app-poule (getAllPoules)=\"getAllPoules()\" [poules]=\"poules\"></app-poule>\n  </mat-tab>\n\n  <mat-tab>\n    <ng-template mat-tab-label class=\"mat-tab-label\">\n      Phases finales\n    </ng-template>\n\n    <app-bracket [phase]=\"'finale'\" [tableau]=\"tableau\"></app-bracket>\n  </mat-tab>\n\n  <mat-tab *ngIf=\"tableau.consolante\">\n    <ng-template mat-tab-label class=\"mat-tab-label\">\n      Consolante\n    </ng-template>\n\n    <app-bracket [phase]=\"'consolante'\" [tableau]=\"tableau\"></app-bracket>\n  </mat-tab>\n</mat-tab-group>\n","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthGuardService } from './auth-guard.service';\r\nimport { AuthInterceptorInterceptor } from './Service/auth-interceptor.interceptor';\r\nimport { UnauthGuardService } from './unauth-guard.service';\r\n\r\n@NgModule({\r\n  providers: [\r\n    AuthGuardService,\r\n    UnauthGuardService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptorInterceptor,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class CoreModules {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AccountService } from './Service/account.service';\r\n\r\n@Injectable()\r\nexport class UnauthGuardService implements CanActivate {\r\n\r\n  constructor(private accountService: AccountService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (state.url === '/login' && !this.accountService.isLoggedIn()) { return true; }\r\n    else {\r\n      this.router.navigateByUrl('/gestion');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-confirm-formulaire',\n  templateUrl: './confirm-formulaire.component.html',\n  styleUrls: ['./confirm-formulaire.component.scss']\n})\nexport class ConfirmFormulaireComponent implements OnInit {\n  public summary: string = '';\n\n  constructor(private readonly router: Router) {\n    if ((this.router.getCurrentNavigation().extras).hasOwnProperty('state') && (this.router.getCurrentNavigation().extras.state).hasOwnProperty('summary')) {\n      this.summary = this.router.getCurrentNavigation().extras.state.summary;\n    }\n    else this.router.navigateByUrl('/formulaire');\n  }\n\n  ngOnInit(): void { }\n\n}\n","<mat-card>\n  <h1 class=\"lobster center\">Merci pour votre inscription, vos informations ont été enregistrées !</h1>\n\n  <h2><u>Résumé de votre inscription :</u></h2>\n\n  <p style=\"white-space: pre-line;\">{{ summary }}</p>\n\n  <p class=\"center alerte_pill\">Vous pouvez quitter la page.</p>\n</mat-card>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Dialog } from '../../Interface/Dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Dialog) {}\n}\n","<h1 mat-dialog-title class=\"center\">\n  {{ data.action }}\n</h1>\n<h2 mat-dialog-content class=\"center\" *ngIf=\"data.option\">\n  {{ data.option }}\n</h2>\n<div mat-dialog-actions class=\"center\">\n  <button mat-button mat-dialog-close>Annuler</button>\n  <button mat-button color=\"primary\" [mat-dialog-close]=\"data.id\" cdkFocusInitial>{{ data.action_button_text }}</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport {Routes, RouterModule, PreloadAllModules} from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/gestion', pathMatch: 'full' },\n  { path: 'login', loadChildren: () => import('./AuthModule/auth.modules').then(m => m.AuthModules) },\n  { path: 'gestion', loadChildren: () => import('./GestionModule/gestion.modules').then(m => m.GestionModules) },\n  { path: 'formulaire', loadChildren: () => import('./FormulaireModule/formulaire.modules').then(m => m.FormulaireModules) }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules,\n      useHash: true\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}